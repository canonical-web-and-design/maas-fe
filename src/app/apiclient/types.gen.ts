// This file is auto-generated by @hey-api/openapi-ts

/**
 * Content for a response returning a JWT.
 */
export type AccessTokenResponse = {
  token_type: string;
  access_token: string;
  kind?: string;
};

export type BadRequestBodyResponse = {
  code?: number;
  message?: string;
  details?: Array<BaseExceptionDetail>;
  kind?: string;
};

export type BaseExceptionDetail = {
  type: string;
  message: string;
  field?: string;
  location?: string;
};

export type BaseHal = {
  self: BaseHref;
};

export type BaseHref = {
  href: string;
};

export type BodyLoginMaasAV3AuthLoginPost = {
  grant_type?: string;
  username: string;
  password: string;
  scope?: string;
  client_id?: string;
  client_secret?: string;
};

export type ConflictBodyResponse = {
  code?: number;
  message?: string;
  details?: Array<BaseExceptionDetail>;
  kind?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type EventResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  created: string;
  updated: string;
  type: EventTypeResponse;
  node_system_id?: string;
  node_hostname: string;
  user_id?: number;
  owner: string;
  ip_address?: string;
  user_agent: string;
  description: string;
  action: string;
  kind?: string;
};

/**
 * An enumeration.
 */
export type EventTypeLevelEnum =
  | "AUDIT"
  | "DEBUG"
  | "INFO"
  | "WARNING"
  | "ERROR"
  | "CRITICAL";

export type EventTypeResponse = {
  name: string;
  description: string;
  level: EventTypeLevelEnum;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type EventsListResponse = {
  items: Array<EventResponse>;
  next?: string;
  kind?: string;
};

export type FabricRequest = {
  /**
   * The unique name of the entity.
   */
  name: string;
  /**
   * The description of the fabric.
   */
  description?: string;
  class_type?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type FabricResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  name?: string;
  description?: string;
  class_type?: string;
  vlans: BaseHref;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type FabricsListResponse = {
  items: Array<FabricResponse>;
  next?: string;
  kind?: string;
};

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

/**
 * An enumeration.
 */
export type HardwareDeviceType = 0 | 1 | 2 | 3 | 4 | 5;

export type IpRangeCreateRequest = {
  /**
   * Type of this range.
   */
  type: IpRangeType;
  /**
   * Start IP address of this range (inclusive).
   */
  start_ip: string;
  /**
   * Last IP address of this range (inclusive).
   */
  end_ip: string;
  /**
   * A description of this range.
   */
  comment?: string;
  /**
   * The owner of this range.
   */
  owner_id?: number;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type IpRangeListResponse = {
  items: Array<IpRangeResponse>;
  next?: string;
  kind?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type IpRangeResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  type: IpRangeType;
  start_ip: string;
  end_ip: string;
  comment?: string;
  owner_id: number;
  kind?: string;
};

/**
 * The vocabulary of possible types of `IPRange` objects.
 */
export type IpRangeType = "dynamic" | "reserved";

export type IpRangeUpdateRequest = {
  /**
   * Type of this range.
   */
  type: IpRangeType;
  /**
   * Start IP address of this range (inclusive).
   */
  start_ip: string;
  /**
   * Last IP address of this range (inclusive).
   */
  end_ip: string;
  /**
   * A description of this range.
   */
  comment?: string;
  /**
   * The owner of this range.
   */
  owner_id: number;
};

/**
 * The vocabulary of possible types to link a `Subnet` to a `Interface`.
 */
export type InterfaceLinkType = "auto" | "dhcp" | "static" | "link_up";

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type InterfaceListResponse = {
  items: Array<InterfaceResponse>;
  next?: string;
  kind?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type InterfaceResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  name: string;
  type: InterfaceType;
  mac_address?: string;
  link_connected?: boolean;
  interface_speed?: number;
  enabled?: boolean;
  link_speed?: number;
  sriov_max_vf?: number;
  links?: Array<LinkResponse>;
  kind?: string;
};

/**
 * The vocabulary of possible types for `Interface`.
 */
export type InterfaceType =
  | "physical"
  | "bond"
  | "bridge"
  | "vlan"
  | "alias"
  | "unknown";

export type LinkResponse = {
  id: number;
  mode: InterfaceLinkType;
  ip_address?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type MachineResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  system_id: string;
  description: string;
  owner?: string;
  cpu_speed_MHz: number;
  memory_MiB: number;
  osystem: string;
  architecture?: string;
  distro_series: string;
  hwe_kernel?: string;
  locked: boolean;
  cpu_count: number;
  status: NodeStatus;
  power_type?: PowerTypeEnum;
  fqdn: string;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type MachinesListResponse = {
  items: Array<MachineResponse>;
  next?: string;
  kind?: string;
};

/**
 * The vocabulary of a `Node`'s possible statuses.
 */
export type NodeStatus =
  | 0
  | 1
  | 2
  | 3
  | 4
  | 5
  | 6
  | 7
  | 8
  | 9
  | 10
  | 11
  | 12
  | 13
  | 14
  | 15
  | 16
  | 17
  | 18
  | 19
  | 20
  | 21
  | 22;

export type NotFoundBodyResponse = {
  code?: number;
  message?: string;
  details?: Array<BaseExceptionDetail>;
  kind?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type PciDeviceResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  type: HardwareDeviceType;
  vendor_id: string;
  product_id: string;
  vendor_name: string;
  product_name: string;
  commissioning_driver: string;
  bus_number: number;
  device_number: number;
  pci_address: string;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type PciDevicesListResponse = {
  items: Array<PciDeviceResponse>;
  next?: string;
  kind?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type PowerDriverResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  power_type: PowerTypeEnum;
  power_parameters: {
    [key: string]: unknown;
  };
  kind?: string;
};

/**
 * An enumeration.
 */
export type PowerTypeEnum =
  | "amt"
  | "apc"
  | "dli"
  | "eaton"
  | "hmc"
  | "hmcz"
  | "ipmi"
  | "lxd"
  | "manual"
  | "moonshot"
  | "mscm"
  | "msftocs"
  | "nova"
  | "openbmc"
  | "proxmox"
  | "raritan"
  | "recs_box"
  | "redfish"
  | "sm15k"
  | "ucsm"
  | "virsh"
  | "vmware"
  | "webhook"
  | "wedge";

/**
 * The vocabulary of a `Subnet`'s possible reverse DNS modes.
 */
export type RdnsMode = 2 | 0 | 1;

export type ReservedIpCreateRequest = {
  /**
   * The IP to be reserved.
   */
  ip: string;
  /**
   * The MAC address that should be linked to the reserved IP.
   */
  mac_address: string;
  /**
   * A description of this reserved IP.
   */
  comment?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type ReservedIpResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  ip: string;
  mac_address: string;
  comment?: string;
  kind?: string;
};

export type ReservedIpUpdateRequest = {
  /**
   * The IP to be reserved.
   */
  ip: string;
  /**
   * The MAC address that should be linked to the reserved IP.
   */
  mac_address: string;
  /**
   * A description of this reserved IP.
   */
  comment?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type ReservedIpsListResponse = {
  items: Array<ReservedIpResponse>;
  next?: string;
  kind?: string;
};

export type ResourcePoolRequest = {
  /**
   * The unique name of the entity.
   */
  name: string;
  description: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type ResourcePoolResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  name: string;
  description: string;
  kind?: string;
};

export type ResourcePoolUpdateRequest = {
  /**
   * The unique name of the entity.
   */
  name?: string;
  description?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type ResourcePoolsListResponse = {
  items: Array<ResourcePoolResponse>;
  next?: string;
  kind?: string;
};

export type SpaceRequest = {
  /**
   * The unique name of the entity.
   */
  name: string;
  /**
   * The description of the zone.
   */
  description?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type SpaceResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  name?: string;
  description?: string;
  vlans: BaseHref;
  subnets: BaseHref;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type SpacesListResponse = {
  items: Array<SpaceResponse>;
  next?: string;
  kind?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type SshKeyResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  key: string;
  protocol?: SshKeysProtocolType;
  auth_id?: string;
  user_id: number;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type SshKeysListResponse = {
  items: Array<SshKeyResponse>;
  next?: string;
  kind?: string;
};

/**
 * An enumeration.
 */
export type SshKeysProtocolType = "lp" | "gh";

export type SubnetRequest = {
  /**
   * The unique name of the entity.
   */
  name?: string;
  /**
   * The description of the subnet.
   */
  description?: string;
  /**
   * The network CIDR for this subnet.
   */
  cidr: string;
  /**
   * How reverse DNS is handled for this subnet. One of:- ``0`` Disabled: No reverse zone is created.- ``1`` Enabled: Generate reverse zone.- ``2`` RFC2317: Extends '1' to create the necessary parent zone with the appropriate CNAME resource records for the network, if the network is small enough to require the support described in RFC2317.
   */
  rdns_mode?: RdnsMode;
  /**
   * The gateway IP for this subnet.
   */
  gateway_ip?: string;
  /**
   * List of DNS servers for the subnet.
   */
  dns_servers?: Array<string>;
  /**
   * Configure MAAS DNS to allow DNS resolution in this subnet.
   */
  allow_dns?: boolean;
  /**
   * Configure maas-proxy to allow requests from this subnet.
   */
  allow_proxy?: boolean;
  /**
   * Whether to allow active discovery in the subnet.
   */
  active_discovery?: boolean;
  /**
   * Whether this subnet is managed by MAAS or not.
   */
  managed?: boolean;
  /**
   * List of disabled boot architectures for this subnet.
   */
  disabled_boot_architectures?: Array<string>;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type SubnetResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  name?: string;
  description?: string;
  cidr: string;
  rdns_mode: RdnsMode;
  gateway_ip?: string;
  dns_servers?: Array<string>;
  allow_dns: boolean;
  allow_proxy: boolean;
  active_discovery: boolean;
  managed: boolean;
  disabled_boot_architectures: Array<string>;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type SubnetsListResponse = {
  items: Array<SubnetResponse>;
  next?: string;
  kind?: string;
};

export type UnauthorizedBodyResponse = {
  code?: number;
  message?: string;
  details?: Array<BaseExceptionDetail>;
  kind?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type UsbDeviceResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  type: HardwareDeviceType;
  vendor_id: string;
  product_id: string;
  vendor_name: string;
  product_name: string;
  commissioning_driver: string;
  bus_number: number;
  device_number: number;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type UsbDevicesListResponse = {
  items: Array<UsbDeviceResponse>;
  next?: string;
  kind?: string;
};

export type UserInfoResponse = {
  id: number;
  username: string;
  is_superuser: boolean;
};

export type UserRequest = {
  username: string;
  password: string;
  is_superuser: boolean;
  first_name: string;
  last_name?: string;
  email?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type UserResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  username: string;
  password: string;
  is_superuser: boolean;
  first_name: string;
  last_name?: string;
  is_staff: boolean;
  is_active: boolean;
  date_joined: string;
  email?: string;
  last_login?: string;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type UsersListResponse = {
  items: Array<UserResponse>;
  next?: string;
  kind?: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type ValidationErrorBodyResponse = {
  code?: number;
  message?: string;
  details?: Array<BaseExceptionDetail>;
  kind?: string;
};

export type VlanCreateRequest = {
  /**
   * The unique name of the entity.
   */
  name?: string;
  /**
   * The description of the VLAN.
   */
  description?: string;
  /**
   * The VLAN ID of the VLAN. Valid values are within the range [0, 4094].
   */
  vid: number;
  /**
   * The MTU to use on the VLAN. Valid values are within the range [552, 65535].
   */
  mtu?: number;
  /**
   * The space this VLAN should be placed in. If not specified, the VLAN will be placed in the 'undefined' space.
   */
  space_id?: number;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type VlanResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  vid: number;
  name?: string;
  description: string;
  mtu: number;
  dhcp_on: boolean;
  external_dhcp?: string;
  primary_rack?: number;
  secondary_rack?: number;
  relay_vlan_id?: number;
  space?: BaseHref;
  kind?: string;
};

export type VlanUpdateRequest = {
  /**
   * The unique name of the entity.
   */
  name?: string;
  /**
   * The description of the VLAN.
   */
  description?: string;
  /**
   * The VLAN ID of the VLAN. Valid values are within the range [0, 4094].
   */
  vid: number;
  /**
   * The MTU to use on the VLAN. Valid values are within the range [552, 65535].
   */
  mtu?: number;
  /**
   * The space this VLAN should be placed in. If not specified, the VLAN will be placed in the 'undefined' space.
   */
  space_id?: number;
  /**
   * Fabric ID containing the VLAN.
   */
  fabric_id: number;
  /**
   * Whether or not DHCP should be managed on the VLAN.
   */
  dhcp_on: boolean;
  /**
   * The primary rack controller ID managing the VLAN.
   */
  primary_rack_id?: number;
  /**
   * The secondary rack controller ID managing the VLAN
   */
  secondary_rack_id?: number;
  /**
   * Relay VLAN ID. Only set when this VLAN will be using a DHCP relay to forward DHCP requests to another VLAN that MAAS is managing. MAAS will not run the DHCP relay itself, it must be configured to proxy reqests to the primary and/or secondary rack controller interfaces for the VLAN specified in this field.
   */
  relay_vlan_id?: number;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type VlansListResponse = {
  items: Array<VlanResponse>;
  next?: string;
  kind?: string;
};

export type ZoneRequest = {
  /**
   * The unique name of the entity.
   */
  name: string;
  /**
   * The description of the zone.
   */
  description?: string;
};

/**
 * Base HAL response class that every response object must extend. The response object will look like
 * {
 * '_links': {
 * 'self': {'href': '/api/v3/'}
 * },
 * '_embedded': {}
 * }
 */
export type ZoneResponse = {
  _links?: BaseHal;
  _embedded?: {
    [key: string]: unknown;
  };
  id: number;
  name: string;
  description: string;
  kind?: string;
};

/**
 * Base class for token-paginated responses.
 * Derived classes should overwrite the items property
 */
export type ZonesListResponse = {
  items: Array<ZoneResponse>;
  next?: string;
  kind?: string;
};

export type AccessTokenMaasAv3AuthAccessTokenGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/auth/access_token";
};

export type AccessTokenMaasAv3AuthAccessTokenGetErrors = {
  /**
   * Unauthorized
   */
  401: UnauthorizedBodyResponse;
};

export type AccessTokenMaasAv3AuthAccessTokenGetError =
  AccessTokenMaasAv3AuthAccessTokenGetErrors[keyof AccessTokenMaasAv3AuthAccessTokenGetErrors];

export type AccessTokenMaasAv3AuthAccessTokenGetResponses = {
  /**
   * Successful Response
   */
  200: AccessTokenResponse;
};

export type AccessTokenMaasAv3AuthAccessTokenGetResponse =
  AccessTokenMaasAv3AuthAccessTokenGetResponses[keyof AccessTokenMaasAv3AuthAccessTokenGetResponses];

export type LoginMaasAv3AuthLoginPostData = {
  body: BodyLoginMaasAV3AuthLoginPost;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/auth/login";
};

export type LoginMaasAv3AuthLoginPostErrors = {
  /**
   * Unauthorized
   */
  401: UnauthorizedBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type LoginMaasAv3AuthLoginPostError =
  LoginMaasAv3AuthLoginPostErrors[keyof LoginMaasAv3AuthLoginPostErrors];

export type LoginMaasAv3AuthLoginPostResponses = {
  /**
   * Successful Response
   */
  200: AccessTokenResponse;
};

export type LoginMaasAv3AuthLoginPostResponse =
  LoginMaasAv3AuthLoginPostResponses[keyof LoginMaasAv3AuthLoginPostResponses];

export type ListEventsMaasAv3EventsGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
    system_id?: Array<string>;
  };
  url: "/MAAS/a/v3/events";
};

export type ListEventsMaasAv3EventsGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListEventsMaasAv3EventsGetError =
  ListEventsMaasAv3EventsGetErrors[keyof ListEventsMaasAv3EventsGetErrors];

export type ListEventsMaasAv3EventsGetResponses = {
  /**
   * Successful Response
   */
  200: EventsListResponse;
};

export type ListEventsMaasAv3EventsGetResponse =
  ListEventsMaasAv3EventsGetResponses[keyof ListEventsMaasAv3EventsGetResponses];

export type ListFabricsMaasAv3FabricsGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/fabrics";
};

export type ListFabricsMaasAv3FabricsGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListFabricsMaasAv3FabricsGetError =
  ListFabricsMaasAv3FabricsGetErrors[keyof ListFabricsMaasAv3FabricsGetErrors];

export type ListFabricsMaasAv3FabricsGetResponses = {
  /**
   * Successful Response
   */
  200: FabricsListResponse;
};

export type ListFabricsMaasAv3FabricsGetResponse =
  ListFabricsMaasAv3FabricsGetResponses[keyof ListFabricsMaasAv3FabricsGetResponses];

export type CreateFabricMaasAv3FabricsPostData = {
  body: FabricRequest;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/fabrics";
};

export type CreateFabricMaasAv3FabricsPostErrors = {
  /**
   * Conflict
   */
  409: ConflictBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type CreateFabricMaasAv3FabricsPostError =
  CreateFabricMaasAv3FabricsPostErrors[keyof CreateFabricMaasAv3FabricsPostErrors];

export type CreateFabricMaasAv3FabricsPostResponses = {
  /**
   * Successful Response
   */
  201: FabricResponse;
};

export type CreateFabricMaasAv3FabricsPostResponse =
  CreateFabricMaasAv3FabricsPostResponses[keyof CreateFabricMaasAv3FabricsPostResponses];

export type DeleteFabricMaasAv3FabricsFabricIdDeleteData = {
  body?: never;
  headers?: {
    "if-match"?: string;
  };
  path: {
    fabric_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/fabrics/{fabric_id}";
};

export type DeleteFabricMaasAv3FabricsFabricIdDeleteErrors = {
  /**
   * Bad Request
   */
  400: BadRequestBodyResponse;
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteFabricMaasAv3FabricsFabricIdDeleteError =
  DeleteFabricMaasAv3FabricsFabricIdDeleteErrors[keyof DeleteFabricMaasAv3FabricsFabricIdDeleteErrors];

export type DeleteFabricMaasAv3FabricsFabricIdDeleteResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeleteFabricMaasAv3FabricsFabricIdDeleteResponse =
  DeleteFabricMaasAv3FabricsFabricIdDeleteResponses[keyof DeleteFabricMaasAv3FabricsFabricIdDeleteResponses];

export type GetFabricMaasAv3FabricsFabricIdGetData = {
  body?: never;
  path: {
    fabric_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/fabrics/{fabric_id}";
};

export type GetFabricMaasAv3FabricsFabricIdGetErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type GetFabricMaasAv3FabricsFabricIdGetError =
  GetFabricMaasAv3FabricsFabricIdGetErrors[keyof GetFabricMaasAv3FabricsFabricIdGetErrors];

export type GetFabricMaasAv3FabricsFabricIdGetResponses = {
  /**
   * Successful Response
   */
  200: FabricResponse;
};

export type GetFabricMaasAv3FabricsFabricIdGetResponse =
  GetFabricMaasAv3FabricsFabricIdGetResponses[keyof GetFabricMaasAv3FabricsFabricIdGetResponses];

export type UpdateFabricMaasAv3FabricsFabricIdPutData = {
  body: FabricRequest;
  path: {
    fabric_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/fabrics/{fabric_id}";
};

export type UpdateFabricMaasAv3FabricsFabricIdPutErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type UpdateFabricMaasAv3FabricsFabricIdPutError =
  UpdateFabricMaasAv3FabricsFabricIdPutErrors[keyof UpdateFabricMaasAv3FabricsFabricIdPutErrors];

export type UpdateFabricMaasAv3FabricsFabricIdPutResponses = {
  /**
   * Successful Response
   */
  200: FabricResponse;
};

export type UpdateFabricMaasAv3FabricsFabricIdPutResponse =
  UpdateFabricMaasAv3FabricsFabricIdPutResponses[keyof UpdateFabricMaasAv3FabricsFabricIdPutResponses];

export type ListInterfacesMaasAv3MachinesNodeIdInterfacesGetData = {
  body?: never;
  path: {
    node_id: number;
  };
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/machines/{node_id}/interfaces";
};

export type ListInterfacesMaasAv3MachinesNodeIdInterfacesGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListInterfacesMaasAv3MachinesNodeIdInterfacesGetError =
  ListInterfacesMaasAv3MachinesNodeIdInterfacesGetErrors[keyof ListInterfacesMaasAv3MachinesNodeIdInterfacesGetErrors];

export type ListInterfacesMaasAv3MachinesNodeIdInterfacesGetResponses = {
  /**
   * Successful Response
   */
  200: InterfaceListResponse;
};

export type ListInterfacesMaasAv3MachinesNodeIdInterfacesGetResponse =
  ListInterfacesMaasAv3MachinesNodeIdInterfacesGetResponses[keyof ListInterfacesMaasAv3MachinesNodeIdInterfacesGetResponses];

export type ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetData =
  {
    body?: never;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
    };
    query?: {
      token?: string;
      size?: number;
    };
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges";
  };

export type ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetErrors =
  {
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetError =
  ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetErrors[keyof ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetErrors];

export type ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetResponses =
  {
    /**
     * Successful Response
     */
    200: IpRangeListResponse;
  };

export type ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetResponse =
  ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetResponses[keyof ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetResponses];

export type CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostData =
  {
    body: IpRangeCreateRequest;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges";
  };

export type CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostError =
  CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostErrors[keyof CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostErrors];

export type CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostResponses =
  {
    /**
     * Successful Response
     */
    201: IpRangeResponse;
  };

export type CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostResponse =
  CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostResponses[keyof CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostResponses];

export type DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteData =
  {
    body?: never;
    headers?: {
      "if-match"?: string;
    };
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
      iprange_id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges/{iprange_id}";
  };

export type DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteError =
  DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteErrors[keyof DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteErrors];

export type DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteResponses =
  {
    /**
     * Successful Response
     */
    204: void;
  };

export type DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteResponse =
  DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteResponses[keyof DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteResponses];

export type UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutData =
  {
    body: IpRangeUpdateRequest;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
      iprange_id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges/{iprange_id}";
  };

export type UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutError =
  UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutErrors[keyof UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutErrors];

export type UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutResponses =
  {
    /**
     * Successful Response
     */
    200: IpRangeResponse;
  };

export type UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutResponse =
  UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutResponses[keyof UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutResponses];

export type GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetData =
  {
    body?: never;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
      id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges/{id}";
  };

export type GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetError =
  GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetErrors[keyof GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetErrors];

export type GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetResponses =
  {
    /**
     * Successful Response
     */
    200: IpRangeResponse;
  };

export type GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetResponse =
  GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetResponses[keyof GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetResponses];

export type GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetData =
  {
    body?: never;
    path: {
      system_id: string;
    };
    query?: never;
    url: "/MAAS/a/v3/machines/{system_id}/power_parameters";
  };

export type GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetError =
  GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetErrors[keyof GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetErrors];

export type GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetResponses =
  {
    /**
     * Successful Response
     */
    200: PowerDriverResponse;
  };

export type GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetResponse =
  GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetResponses[keyof GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetResponses];

export type ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetData = {
  body?: never;
  path: {
    system_id: string;
  };
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/machines/{system_id}/pci_devices";
};

export type ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetError =
  ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetErrors[keyof ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetErrors];

export type ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetResponses =
  {
    /**
     * Successful Response
     */
    200: PciDevicesListResponse;
  };

export type ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetResponse =
  ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetResponses[keyof ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetResponses];

export type ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetData = {
  body?: never;
  path: {
    system_id: string;
  };
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/machines/{system_id}/usb_devices";
};

export type ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetError =
  ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetErrors[keyof ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetErrors];

export type ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetResponses =
  {
    /**
     * Successful Response
     */
    200: UsbDevicesListResponse;
  };

export type ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetResponse =
  ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetResponses[keyof ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetResponses];

export type ListMachinesMaasAv3MachinesGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/machines";
};

export type ListMachinesMaasAv3MachinesGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListMachinesMaasAv3MachinesGetError =
  ListMachinesMaasAv3MachinesGetErrors[keyof ListMachinesMaasAv3MachinesGetErrors];

export type ListMachinesMaasAv3MachinesGetResponses = {
  /**
   * Successful Response
   */
  200: MachinesListResponse;
};

export type ListMachinesMaasAv3MachinesGetResponse =
  ListMachinesMaasAv3MachinesGetResponses[keyof ListMachinesMaasAv3MachinesGetResponses];

export type ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetData =
  {
    body?: never;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
    };
    query?: {
      token?: string;
      size?: number;
    };
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips";
  };

export type ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetErrors =
  {
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetError =
  ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetErrors[keyof ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetErrors];

export type ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetResponses =
  {
    /**
     * Successful Response
     */
    200: ReservedIpsListResponse;
  };

export type ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetResponse =
  ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetResponses[keyof ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetResponses];

export type CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostData =
  {
    body: ReservedIpCreateRequest;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips";
  };

export type CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostError =
  CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostErrors[keyof CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostErrors];

export type CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostResponses =
  {
    /**
     * Successful Response
     */
    201: ReservedIpResponse;
  };

export type CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostResponse =
  CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostResponses[keyof CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostResponses];

export type DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteData =
  {
    body?: never;
    headers?: {
      "if-match"?: string;
    };
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
      id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips/{id}";
  };

export type DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteError =
  DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteErrors[keyof DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteErrors];

export type DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteResponses =
  {
    /**
     * Successful Response
     */
    200: unknown;
    /**
     * No Content
     */
    204: void;
  };

export type DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteResponse =
  DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteResponses[keyof DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteResponses];

export type UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutData =
  {
    body: ReservedIpUpdateRequest;
    headers?: {
      "if-match"?: string;
    };
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
      id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips/{id}";
  };

export type UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutError =
  UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutErrors[keyof UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutErrors];

export type UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutResponses =
  {
    /**
     * Successful Response
     */
    200: ReservedIpResponse;
  };

export type UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutResponse =
  UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutResponses[keyof UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutResponses];

export type GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetData =
  {
    body?: never;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
      reservedip_id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips/{reservedip_id}";
  };

export type GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetError =
  GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetErrors[keyof GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetErrors];

export type GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetResponses =
  {
    /**
     * Successful Response
     */
    200: ReservedIpResponse;
  };

export type GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetResponse =
  GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetResponses[keyof GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetResponses];

export type ListResourcePoolsMaasAv3ResourcePoolsGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/resource_pools";
};

export type ListResourcePoolsMaasAv3ResourcePoolsGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListResourcePoolsMaasAv3ResourcePoolsGetError =
  ListResourcePoolsMaasAv3ResourcePoolsGetErrors[keyof ListResourcePoolsMaasAv3ResourcePoolsGetErrors];

export type ListResourcePoolsMaasAv3ResourcePoolsGetResponses = {
  /**
   * Successful Response
   */
  200: ResourcePoolsListResponse;
};

export type ListResourcePoolsMaasAv3ResourcePoolsGetResponse =
  ListResourcePoolsMaasAv3ResourcePoolsGetResponses[keyof ListResourcePoolsMaasAv3ResourcePoolsGetResponses];

export type CreateResourcePoolMaasAv3ResourcePoolsPostData = {
  body: ResourcePoolRequest;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/resource_pools";
};

export type CreateResourcePoolMaasAv3ResourcePoolsPostErrors = {
  /**
   * Conflict
   */
  409: ConflictBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type CreateResourcePoolMaasAv3ResourcePoolsPostError =
  CreateResourcePoolMaasAv3ResourcePoolsPostErrors[keyof CreateResourcePoolMaasAv3ResourcePoolsPostErrors];

export type CreateResourcePoolMaasAv3ResourcePoolsPostResponses = {
  /**
   * Successful Response
   */
  201: ResourcePoolResponse;
};

export type CreateResourcePoolMaasAv3ResourcePoolsPostResponse =
  CreateResourcePoolMaasAv3ResourcePoolsPostResponses[keyof CreateResourcePoolMaasAv3ResourcePoolsPostResponses];

export type GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetData = {
  body?: never;
  path: {
    resource_pool_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/resource_pools/{resource_pool_id}";
};

export type GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetError =
  GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetErrors[keyof GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetErrors];

export type GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetResponses = {
  /**
   * Successful Response
   */
  200: ResourcePoolResponse;
};

export type GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetResponse =
  GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetResponses[keyof GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetResponses];

export type UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutData = {
  body: ResourcePoolUpdateRequest;
  path: {
    resource_pool_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/resource_pools/{resource_pool_id}";
};

export type UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutError =
  UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutErrors[keyof UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutErrors];

export type UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutResponses = {
  /**
   * Successful Response
   */
  200: ResourcePoolResponse;
};

export type UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutResponse =
  UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutResponses[keyof UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutResponses];

export type ListSpacesMaasAv3SpacesGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/spaces";
};

export type ListSpacesMaasAv3SpacesGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListSpacesMaasAv3SpacesGetError =
  ListSpacesMaasAv3SpacesGetErrors[keyof ListSpacesMaasAv3SpacesGetErrors];

export type ListSpacesMaasAv3SpacesGetResponses = {
  /**
   * Successful Response
   */
  200: SpacesListResponse;
};

export type ListSpacesMaasAv3SpacesGetResponse =
  ListSpacesMaasAv3SpacesGetResponses[keyof ListSpacesMaasAv3SpacesGetResponses];

export type CreateSpaceMaasAv3SpacesPostData = {
  body: SpaceRequest;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/spaces";
};

export type CreateSpaceMaasAv3SpacesPostErrors = {
  /**
   * Conflict
   */
  409: ConflictBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type CreateSpaceMaasAv3SpacesPostError =
  CreateSpaceMaasAv3SpacesPostErrors[keyof CreateSpaceMaasAv3SpacesPostErrors];

export type CreateSpaceMaasAv3SpacesPostResponses = {
  /**
   * Successful Response
   */
  201: SpaceResponse;
};

export type CreateSpaceMaasAv3SpacesPostResponse =
  CreateSpaceMaasAv3SpacesPostResponses[keyof CreateSpaceMaasAv3SpacesPostResponses];

export type DeleteSpaceMaasAv3SpacesSpaceIdDeleteData = {
  body?: never;
  headers?: {
    "if-match"?: string;
  };
  path: {
    space_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/spaces/{space_id}";
};

export type DeleteSpaceMaasAv3SpacesSpaceIdDeleteErrors = {
  /**
   * Bad Request
   */
  400: BadRequestBodyResponse;
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteSpaceMaasAv3SpacesSpaceIdDeleteError =
  DeleteSpaceMaasAv3SpacesSpaceIdDeleteErrors[keyof DeleteSpaceMaasAv3SpacesSpaceIdDeleteErrors];

export type DeleteSpaceMaasAv3SpacesSpaceIdDeleteResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeleteSpaceMaasAv3SpacesSpaceIdDeleteResponse =
  DeleteSpaceMaasAv3SpacesSpaceIdDeleteResponses[keyof DeleteSpaceMaasAv3SpacesSpaceIdDeleteResponses];

export type GetSpaceMaasAv3SpacesSpaceIdGetData = {
  body?: never;
  path: {
    space_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/spaces/{space_id}";
};

export type GetSpaceMaasAv3SpacesSpaceIdGetErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type GetSpaceMaasAv3SpacesSpaceIdGetError =
  GetSpaceMaasAv3SpacesSpaceIdGetErrors[keyof GetSpaceMaasAv3SpacesSpaceIdGetErrors];

export type GetSpaceMaasAv3SpacesSpaceIdGetResponses = {
  /**
   * Successful Response
   */
  200: SpaceResponse;
};

export type GetSpaceMaasAv3SpacesSpaceIdGetResponse =
  GetSpaceMaasAv3SpacesSpaceIdGetResponses[keyof GetSpaceMaasAv3SpacesSpaceIdGetResponses];

export type UpdateSpaceMaasAv3SpacesSpaceIdPutData = {
  body: SpaceRequest;
  path: {
    space_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/spaces/{space_id}";
};

export type UpdateSpaceMaasAv3SpacesSpaceIdPutErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type UpdateSpaceMaasAv3SpacesSpaceIdPutError =
  UpdateSpaceMaasAv3SpacesSpaceIdPutErrors[keyof UpdateSpaceMaasAv3SpacesSpaceIdPutErrors];

export type UpdateSpaceMaasAv3SpacesSpaceIdPutResponses = {
  /**
   * Successful Response
   */
  200: SpaceResponse;
};

export type UpdateSpaceMaasAv3SpacesSpaceIdPutResponse =
  UpdateSpaceMaasAv3SpacesSpaceIdPutResponses[keyof UpdateSpaceMaasAv3SpacesSpaceIdPutResponses];

export type ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetData =
  {
    body?: never;
    path: {
      fabric_id: number;
      vlan_id: number;
    };
    query?: {
      token?: string;
      size?: number;
    };
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets";
  };

export type ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetErrors =
  {
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetError =
  ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetErrors[keyof ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetErrors];

export type ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetResponses =
  {
    /**
     * Successful Response
     */
    200: SubnetsListResponse;
  };

export type ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetResponse =
  ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetResponses[keyof ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetResponses];

export type CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostData =
  {
    body: SubnetRequest;
    path: {
      fabric_id: number;
      vlan_id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets";
  };

export type CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostError =
  CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostErrors[keyof CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostErrors];

export type CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostResponses =
  {
    /**
     * Successful Response
     */
    201: SubnetResponse;
  };

export type CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostResponse =
  CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostResponses[keyof CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostResponses];

export type DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteData =
  {
    body?: never;
    headers?: {
      "if-match"?: string;
    };
    path: {
      fabric_id: number;
      vlan_id: number;
      id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{id}";
  };

export type DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteError =
  DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteErrors[keyof DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteErrors];

export type DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteResponses =
  {
    /**
     * Successful Response
     */
    204: void;
  };

export type DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteResponse =
  DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteResponses[keyof DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteResponses];

export type UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutData =
  {
    body: SubnetRequest;
    path: {
      fabric_id: number;
      vlan_id: number;
      id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{id}";
  };

export type UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutError =
  UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutErrors[keyof UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutErrors];

export type UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutResponses =
  {
    /**
     * Successful Response
     */
    200: SubnetResponse;
  };

export type UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutResponse =
  UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutResponses[keyof UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutResponses];

export type GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetData =
  {
    body?: never;
    path: {
      fabric_id: number;
      vlan_id: number;
      subnet_id: number;
    };
    query?: never;
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}";
  };

export type GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetErrors =
  {
    /**
     * Not Found
     */
    404: NotFoundBodyResponse;
    /**
     * Unprocessable Entity
     */
    422: ValidationErrorBodyResponse;
  };

export type GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetError =
  GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetErrors[keyof GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetErrors];

export type GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetResponses =
  {
    /**
     * Successful Response
     */
    200: SubnetResponse;
  };

export type GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetResponse =
  GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetResponses[keyof GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetResponses];

export type GetUserInfoMaasAv3UsersMeGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/users/me";
};

export type GetUserInfoMaasAv3UsersMeGetErrors = {
  /**
   * Unauthorized
   */
  401: UnauthorizedBodyResponse;
};

export type GetUserInfoMaasAv3UsersMeGetError =
  GetUserInfoMaasAv3UsersMeGetErrors[keyof GetUserInfoMaasAv3UsersMeGetErrors];

export type GetUserInfoMaasAv3UsersMeGetResponses = {
  /**
   * Successful Response
   */
  200: UserInfoResponse;
};

export type GetUserInfoMaasAv3UsersMeGetResponse =
  GetUserInfoMaasAv3UsersMeGetResponses[keyof GetUserInfoMaasAv3UsersMeGetResponses];

export type ListUserSshkeysMaasAv3UsersMeSshkeysGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/users/me/sshkeys";
};

export type ListUserSshkeysMaasAv3UsersMeSshkeysGetErrors = {
  /**
   * Unauthorized
   */
  401: UnauthorizedBodyResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ListUserSshkeysMaasAv3UsersMeSshkeysGetError =
  ListUserSshkeysMaasAv3UsersMeSshkeysGetErrors[keyof ListUserSshkeysMaasAv3UsersMeSshkeysGetErrors];

export type ListUserSshkeysMaasAv3UsersMeSshkeysGetResponses = {
  /**
   * Successful Response
   */
  200: SshKeysListResponse;
};

export type ListUserSshkeysMaasAv3UsersMeSshkeysGetResponse =
  ListUserSshkeysMaasAv3UsersMeSshkeysGetResponses[keyof ListUserSshkeysMaasAv3UsersMeSshkeysGetResponses];

export type GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetData = {
  body?: never;
  path: {
    sshkey_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/users/me/sshkeys/{sshkey_id}";
};

export type GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetErrors = {
  /**
   * Unauthorized
   */
  401: UnauthorizedBodyResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetError =
  GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetErrors[keyof GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetErrors];

export type GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetResponses = {
  /**
   * Successful Response
   */
  200: SshKeyResponse;
};

export type GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetResponse =
  GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetResponses[keyof GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetResponses];

export type ListUsersMaasAv3UsersGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/users";
};

export type ListUsersMaasAv3UsersGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListUsersMaasAv3UsersGetError =
  ListUsersMaasAv3UsersGetErrors[keyof ListUsersMaasAv3UsersGetErrors];

export type ListUsersMaasAv3UsersGetResponses = {
  /**
   * Successful Response
   */
  200: UsersListResponse;
};

export type ListUsersMaasAv3UsersGetResponse =
  ListUsersMaasAv3UsersGetResponses[keyof ListUsersMaasAv3UsersGetResponses];

export type CreateUserMaasAv3UsersPostData = {
  body: UserRequest;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/users";
};

export type CreateUserMaasAv3UsersPostErrors = {
  /**
   * Conflict
   */
  409: ConflictBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type CreateUserMaasAv3UsersPostError =
  CreateUserMaasAv3UsersPostErrors[keyof CreateUserMaasAv3UsersPostErrors];

export type CreateUserMaasAv3UsersPostResponses = {
  /**
   * Successful Response
   */
  201: UserResponse;
};

export type CreateUserMaasAv3UsersPostResponse =
  CreateUserMaasAv3UsersPostResponses[keyof CreateUserMaasAv3UsersPostResponses];

export type GetUserMaasAv3UsersUserIdGetData = {
  body?: never;
  path: {
    user_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/users/{user_id}";
};

export type GetUserMaasAv3UsersUserIdGetErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type GetUserMaasAv3UsersUserIdGetError =
  GetUserMaasAv3UsersUserIdGetErrors[keyof GetUserMaasAv3UsersUserIdGetErrors];

export type GetUserMaasAv3UsersUserIdGetResponses = {
  /**
   * Successful Response
   */
  200: UserResponse;
};

export type GetUserMaasAv3UsersUserIdGetResponse =
  GetUserMaasAv3UsersUserIdGetResponses[keyof GetUserMaasAv3UsersUserIdGetResponses];

export type UpdateUserMaasAv3UsersUserIdPutData = {
  body: UserRequest;
  path: {
    user_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/users/{user_id}";
};

export type UpdateUserMaasAv3UsersUserIdPutErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type UpdateUserMaasAv3UsersUserIdPutError =
  UpdateUserMaasAv3UsersUserIdPutErrors[keyof UpdateUserMaasAv3UsersUserIdPutErrors];

export type UpdateUserMaasAv3UsersUserIdPutResponses = {
  /**
   * Successful Response
   */
  200: UserResponse;
};

export type UpdateUserMaasAv3UsersUserIdPutResponse =
  UpdateUserMaasAv3UsersUserIdPutResponses[keyof UpdateUserMaasAv3UsersUserIdPutResponses];

export type ListFabricVlansMaasAv3FabricsFabricIdVlansGetData = {
  body?: never;
  path: {
    fabric_id: number;
  };
  query?: {
    token?: string;
    size?: number;
  };
  url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans";
};

export type ListFabricVlansMaasAv3FabricsFabricIdVlansGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListFabricVlansMaasAv3FabricsFabricIdVlansGetError =
  ListFabricVlansMaasAv3FabricsFabricIdVlansGetErrors[keyof ListFabricVlansMaasAv3FabricsFabricIdVlansGetErrors];

export type ListFabricVlansMaasAv3FabricsFabricIdVlansGetResponses = {
  /**
   * Successful Response
   */
  200: VlansListResponse;
};

export type ListFabricVlansMaasAv3FabricsFabricIdVlansGetResponse =
  ListFabricVlansMaasAv3FabricsFabricIdVlansGetResponses[keyof ListFabricVlansMaasAv3FabricsFabricIdVlansGetResponses];

export type CreateFabricVlanMaasAv3FabricsFabricIdVlansPostData = {
  body: VlanCreateRequest;
  path: {
    fabric_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans";
};

export type CreateFabricVlanMaasAv3FabricsFabricIdVlansPostErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type CreateFabricVlanMaasAv3FabricsFabricIdVlansPostError =
  CreateFabricVlanMaasAv3FabricsFabricIdVlansPostErrors[keyof CreateFabricVlanMaasAv3FabricsFabricIdVlansPostErrors];

export type CreateFabricVlanMaasAv3FabricsFabricIdVlansPostResponses = {
  /**
   * OK
   */
  200: VlanResponse;
  /**
   * Successful Response
   */
  201: unknown;
};

export type CreateFabricVlanMaasAv3FabricsFabricIdVlansPostResponse =
  CreateFabricVlanMaasAv3FabricsFabricIdVlansPostResponses[keyof CreateFabricVlanMaasAv3FabricsFabricIdVlansPostResponses];

export type DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteData = {
  body?: never;
  headers?: {
    "if-match"?: string;
  };
  path: {
    fabric_id: number;
    vlan_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}";
};

export type DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteErrors = {
  /**
   * Bad Request
   */
  400: BadRequestBodyResponse;
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteError =
  DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteErrors[keyof DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteErrors];

export type DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteResponse =
  DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteResponses[keyof DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteResponses];

export type GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetData = {
  body?: never;
  path: {
    fabric_id: number;
    vlan_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}";
};

export type GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetError =
  GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetErrors[keyof GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetErrors];

export type GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetResponses = {
  /**
   * Successful Response
   */
  200: VlanResponse;
};

export type GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetResponse =
  GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetResponses[keyof GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetResponses];

export type UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutData = {
  body: VlanUpdateRequest;
  path: {
    fabric_id: number;
    vlan_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}";
};

export type UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutError =
  UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutErrors[keyof UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutErrors];

export type UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutResponses = {
  /**
   * Successful Response
   */
  200: VlanResponse;
};

export type UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutResponse =
  UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutResponses[keyof UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutResponses];

export type ListZonesMaasAv3ZonesGetData = {
  body?: never;
  path?: never;
  query?: {
    token?: string;
    size?: number;
    id?: Array<number>;
  };
  url: "/MAAS/a/v3/zones";
};

export type ListZonesMaasAv3ZonesGetErrors = {
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type ListZonesMaasAv3ZonesGetError =
  ListZonesMaasAv3ZonesGetErrors[keyof ListZonesMaasAv3ZonesGetErrors];

export type ListZonesMaasAv3ZonesGetResponses = {
  /**
   * Successful Response
   */
  200: ZonesListResponse;
};

export type ListZonesMaasAv3ZonesGetResponse =
  ListZonesMaasAv3ZonesGetResponses[keyof ListZonesMaasAv3ZonesGetResponses];

export type CreateZoneMaasAv3ZonesPostData = {
  body: ZoneRequest;
  path?: never;
  query?: never;
  url: "/MAAS/a/v3/zones";
};

export type CreateZoneMaasAv3ZonesPostErrors = {
  /**
   * Conflict
   */
  409: ConflictBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type CreateZoneMaasAv3ZonesPostError =
  CreateZoneMaasAv3ZonesPostErrors[keyof CreateZoneMaasAv3ZonesPostErrors];

export type CreateZoneMaasAv3ZonesPostResponses = {
  /**
   * Successful Response
   */
  201: ZoneResponse;
};

export type CreateZoneMaasAv3ZonesPostResponse =
  CreateZoneMaasAv3ZonesPostResponses[keyof CreateZoneMaasAv3ZonesPostResponses];

export type DeleteZoneMaasAv3ZonesZoneIdDeleteData = {
  body?: never;
  headers?: {
    "if-match"?: string;
  };
  path: {
    zone_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/zones/{zone_id}";
};

export type DeleteZoneMaasAv3ZonesZoneIdDeleteErrors = {
  /**
   * Bad Request
   */
  400: BadRequestBodyResponse;
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteZoneMaasAv3ZonesZoneIdDeleteError =
  DeleteZoneMaasAv3ZonesZoneIdDeleteErrors[keyof DeleteZoneMaasAv3ZonesZoneIdDeleteErrors];

export type DeleteZoneMaasAv3ZonesZoneIdDeleteResponses = {
  /**
   * Successful Response
   */
  204: void;
};

export type DeleteZoneMaasAv3ZonesZoneIdDeleteResponse =
  DeleteZoneMaasAv3ZonesZoneIdDeleteResponses[keyof DeleteZoneMaasAv3ZonesZoneIdDeleteResponses];

export type GetZoneMaasAv3ZonesZoneIdGetData = {
  body?: never;
  path: {
    zone_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/zones/{zone_id}";
};

export type GetZoneMaasAv3ZonesZoneIdGetErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type GetZoneMaasAv3ZonesZoneIdGetError =
  GetZoneMaasAv3ZonesZoneIdGetErrors[keyof GetZoneMaasAv3ZonesZoneIdGetErrors];

export type GetZoneMaasAv3ZonesZoneIdGetResponses = {
  /**
   * Successful Response
   */
  200: ZoneResponse;
};

export type GetZoneMaasAv3ZonesZoneIdGetResponse =
  GetZoneMaasAv3ZonesZoneIdGetResponses[keyof GetZoneMaasAv3ZonesZoneIdGetResponses];

export type UpdateZoneMaasAv3ZonesZoneIdPutData = {
  body: ZoneRequest;
  path: {
    zone_id: number;
  };
  query?: never;
  url: "/MAAS/a/v3/zones/{zone_id}";
};

export type UpdateZoneMaasAv3ZonesZoneIdPutErrors = {
  /**
   * Not Found
   */
  404: NotFoundBodyResponse;
  /**
   * Unprocessable Entity
   */
  422: ValidationErrorBodyResponse;
};

export type UpdateZoneMaasAv3ZonesZoneIdPutError =
  UpdateZoneMaasAv3ZonesZoneIdPutErrors[keyof UpdateZoneMaasAv3ZonesZoneIdPutErrors];

export type UpdateZoneMaasAv3ZonesZoneIdPutResponses = {
  /**
   * Successful Response
   */
  200: ZoneResponse;
};

export type UpdateZoneMaasAv3ZonesZoneIdPutResponse =
  UpdateZoneMaasAv3ZonesZoneIdPutResponses[keyof UpdateZoneMaasAv3ZonesZoneIdPutResponses];
