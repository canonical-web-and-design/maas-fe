// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
  urlSearchParamsBodySerializer,
} from "@hey-api/client-fetch";

import type {
  AccessTokenMaasAv3AuthAccessTokenGetData,
  AccessTokenMaasAv3AuthAccessTokenGetResponse,
  AccessTokenMaasAv3AuthAccessTokenGetError,
  LoginMaasAv3AuthLoginPostData,
  LoginMaasAv3AuthLoginPostResponse,
  LoginMaasAv3AuthLoginPostError,
  ListEventsMaasAv3EventsGetData,
  ListEventsMaasAv3EventsGetResponse,
  ListEventsMaasAv3EventsGetError,
  ListFabricsMaasAv3FabricsGetData,
  ListFabricsMaasAv3FabricsGetResponse,
  ListFabricsMaasAv3FabricsGetError,
  CreateFabricMaasAv3FabricsPostData,
  CreateFabricMaasAv3FabricsPostResponse,
  CreateFabricMaasAv3FabricsPostError,
  DeleteFabricMaasAv3FabricsFabricIdDeleteData,
  DeleteFabricMaasAv3FabricsFabricIdDeleteResponse,
  DeleteFabricMaasAv3FabricsFabricIdDeleteError,
  GetFabricMaasAv3FabricsFabricIdGetData,
  GetFabricMaasAv3FabricsFabricIdGetResponse,
  GetFabricMaasAv3FabricsFabricIdGetError,
  UpdateFabricMaasAv3FabricsFabricIdPutData,
  UpdateFabricMaasAv3FabricsFabricIdPutResponse,
  UpdateFabricMaasAv3FabricsFabricIdPutError,
  ListInterfacesMaasAv3MachinesNodeIdInterfacesGetData,
  ListInterfacesMaasAv3MachinesNodeIdInterfacesGetResponse,
  ListInterfacesMaasAv3MachinesNodeIdInterfacesGetError,
  ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetData,
  ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetResponse,
  ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetError,
  CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostData,
  CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostResponse,
  CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostError,
  DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteData,
  DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteResponse,
  DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteError,
  UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutData,
  UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutResponse,
  UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutError,
  GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetData,
  GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetResponse,
  GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetError,
  GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetData,
  GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetResponse,
  GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetError,
  ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetData,
  ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetResponse,
  ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetError,
  ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetData,
  ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetResponse,
  ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetError,
  ListMachinesMaasAv3MachinesGetData,
  ListMachinesMaasAv3MachinesGetResponse,
  ListMachinesMaasAv3MachinesGetError,
  ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetData,
  ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetResponse,
  ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetError,
  CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostData,
  CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostResponse,
  CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostError,
  DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteData,
  DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteResponse,
  DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteError,
  UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutData,
  UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutResponse,
  UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutError,
  GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetData,
  GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetResponse,
  GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetError,
  ListResourcePoolsMaasAv3ResourcePoolsGetData,
  ListResourcePoolsMaasAv3ResourcePoolsGetResponse,
  ListResourcePoolsMaasAv3ResourcePoolsGetError,
  CreateResourcePoolMaasAv3ResourcePoolsPostData,
  CreateResourcePoolMaasAv3ResourcePoolsPostResponse,
  CreateResourcePoolMaasAv3ResourcePoolsPostError,
  GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetData,
  GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetResponse,
  GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetError,
  UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutData,
  UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutResponse,
  UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutError,
  ListSpacesMaasAv3SpacesGetData,
  ListSpacesMaasAv3SpacesGetResponse,
  ListSpacesMaasAv3SpacesGetError,
  CreateSpaceMaasAv3SpacesPostData,
  CreateSpaceMaasAv3SpacesPostResponse,
  CreateSpaceMaasAv3SpacesPostError,
  DeleteSpaceMaasAv3SpacesSpaceIdDeleteData,
  DeleteSpaceMaasAv3SpacesSpaceIdDeleteResponse,
  DeleteSpaceMaasAv3SpacesSpaceIdDeleteError,
  GetSpaceMaasAv3SpacesSpaceIdGetData,
  GetSpaceMaasAv3SpacesSpaceIdGetResponse,
  GetSpaceMaasAv3SpacesSpaceIdGetError,
  UpdateSpaceMaasAv3SpacesSpaceIdPutData,
  UpdateSpaceMaasAv3SpacesSpaceIdPutResponse,
  UpdateSpaceMaasAv3SpacesSpaceIdPutError,
  ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetData,
  ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetResponse,
  ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetError,
  CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostData,
  CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostResponse,
  CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostError,
  DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteData,
  DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteResponse,
  DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteError,
  UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutData,
  UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutResponse,
  UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutError,
  GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetData,
  GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetResponse,
  GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetError,
  GetUserInfoMaasAv3UsersMeGetData,
  GetUserInfoMaasAv3UsersMeGetResponse,
  GetUserInfoMaasAv3UsersMeGetError,
  ListUserSshkeysMaasAv3UsersMeSshkeysGetData,
  ListUserSshkeysMaasAv3UsersMeSshkeysGetResponse,
  ListUserSshkeysMaasAv3UsersMeSshkeysGetError,
  GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetData,
  GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetResponse,
  GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetError,
  ListUsersMaasAv3UsersGetData,
  ListUsersMaasAv3UsersGetResponse,
  ListUsersMaasAv3UsersGetError,
  CreateUserMaasAv3UsersPostData,
  CreateUserMaasAv3UsersPostResponse,
  CreateUserMaasAv3UsersPostError,
  GetUserMaasAv3UsersUserIdGetData,
  GetUserMaasAv3UsersUserIdGetResponse,
  GetUserMaasAv3UsersUserIdGetError,
  UpdateUserMaasAv3UsersUserIdPutData,
  UpdateUserMaasAv3UsersUserIdPutResponse,
  UpdateUserMaasAv3UsersUserIdPutError,
  ListFabricVlansMaasAv3FabricsFabricIdVlansGetData,
  ListFabricVlansMaasAv3FabricsFabricIdVlansGetResponse,
  ListFabricVlansMaasAv3FabricsFabricIdVlansGetError,
  CreateFabricVlanMaasAv3FabricsFabricIdVlansPostData,
  CreateFabricVlanMaasAv3FabricsFabricIdVlansPostResponse,
  CreateFabricVlanMaasAv3FabricsFabricIdVlansPostError,
  DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteData,
  DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteResponse,
  DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteError,
  GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetData,
  GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetResponse,
  GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetError,
  UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutData,
  UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutResponse,
  UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutError,
  ListZonesMaasAv3ZonesGetData,
  ListZonesMaasAv3ZonesGetResponse,
  ListZonesMaasAv3ZonesGetError,
  CreateZoneMaasAv3ZonesPostData,
  CreateZoneMaasAv3ZonesPostResponse,
  CreateZoneMaasAv3ZonesPostError,
  DeleteZoneMaasAv3ZonesZoneIdDeleteData,
  DeleteZoneMaasAv3ZonesZoneIdDeleteResponse,
  DeleteZoneMaasAv3ZonesZoneIdDeleteError,
  GetZoneMaasAv3ZonesZoneIdGetData,
  GetZoneMaasAv3ZonesZoneIdGetResponse,
  GetZoneMaasAv3ZonesZoneIdGetError,
  UpdateZoneMaasAv3ZonesZoneIdPutData,
  UpdateZoneMaasAv3ZonesZoneIdPutResponse,
  UpdateZoneMaasAv3ZonesZoneIdPutError,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * Access Token
 */
export const accessTokenMaasAV3AuthAccessTokenGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<AccessTokenMaasAv3AuthAccessTokenGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    AccessTokenMaasAv3AuthAccessTokenGetResponse,
    AccessTokenMaasAv3AuthAccessTokenGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/auth/access_token",
  });
};

/**
 * Login
 */
export const loginMaasAV3AuthLoginPost = <ThrowOnError extends boolean = false>(
  options: Options<LoginMaasAv3AuthLoginPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    LoginMaasAv3AuthLoginPostResponse,
    LoginMaasAv3AuthLoginPostError,
    ThrowOnError
  >({
    ...options,
    ...urlSearchParamsBodySerializer,
    headers: {
      "Content-Type": "application/x-www-form-urlencoded",
      ...options?.headers,
    },
    url: "/MAAS/a/v3/auth/login",
  });
};

/**
 * List Events
 */
export const listEventsMaasAV3EventsGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListEventsMaasAv3EventsGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListEventsMaasAv3EventsGetResponse,
    ListEventsMaasAv3EventsGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/events",
  });
};

/**
 * List Fabrics
 */
export const listFabricsMaasAV3FabricsGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListFabricsMaasAv3FabricsGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListFabricsMaasAv3FabricsGetResponse,
    ListFabricsMaasAv3FabricsGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics",
  });
};

/**
 * Create Fabric
 */
export const createFabricMaasAV3FabricsPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateFabricMaasAv3FabricsPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateFabricMaasAv3FabricsPostResponse,
    CreateFabricMaasAv3FabricsPostError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics",
  });
};

/**
 * Delete Fabric
 */
export const deleteFabricMaasAV3FabricsFabricIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteFabricMaasAv3FabricsFabricIdDeleteData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteFabricMaasAv3FabricsFabricIdDeleteResponse,
    DeleteFabricMaasAv3FabricsFabricIdDeleteError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}",
  });
};

/**
 * Get Fabric
 */
export const getFabricMaasAV3FabricsFabricIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetFabricMaasAv3FabricsFabricIdGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetFabricMaasAv3FabricsFabricIdGetResponse,
    GetFabricMaasAv3FabricsFabricIdGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}",
  });
};

/**
 * Update Fabric
 */
export const updateFabricMaasAV3FabricsFabricIdPut = <
  ThrowOnError extends boolean = false,
>(
  options: Options<UpdateFabricMaasAv3FabricsFabricIdPutData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateFabricMaasAv3FabricsFabricIdPutResponse,
    UpdateFabricMaasAv3FabricsFabricIdPutError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}",
  });
};

/**
 * List Interfaces
 */
export const listInterfacesMaasAV3MachinesNodeIdInterfacesGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ListInterfacesMaasAv3MachinesNodeIdInterfacesGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ListInterfacesMaasAv3MachinesNodeIdInterfacesGetResponse,
    ListInterfacesMaasAv3MachinesNodeIdInterfacesGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/machines/{node_id}/interfaces",
  });
};

/**
 * List Fabric Vlan Subnet Iprange
 */
export const listFabricVlanSubnetIprangeMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).get<
      ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetResponse,
      ListFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesGetError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges",
    });
  };

/**
 * Create Fabric Vlan Subnet Iprange
 */
export const createFabricVlanSubnetIprangeMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPost =
  <ThrowOnError extends boolean = false>(
    options: Options<
      CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).post<
      CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostResponse,
      CreateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesPostError,
      ThrowOnError
    >({
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges",
    });
  };

/**
 * Delete Fabric Vlan Subnet Iprange
 */
export const deleteFabricVlanSubnetIprangeMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDelete =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).delete<
      DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteResponse,
      DeleteFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdDeleteError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges/{iprange_id}",
    });
  };

/**
 * Update Fabric Vlan Subnet Iprange
 */
export const updateFabricVlanSubnetIprangeMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPut =
  <ThrowOnError extends boolean = false>(
    options: Options<
      UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).put<
      UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutResponse,
      UpdateFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIprangeIdPutError,
      ThrowOnError
    >({
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges/{iprange_id}",
    });
  };

/**
 * Get Fabric Vlan Subnet Iprange
 */
export const getFabricVlanSubnetIprangeMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).get<
      GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetResponse,
      GetFabricVlanSubnetIprangeMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdIprangesIdGetError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/ipranges/{id}",
    });
  };

/**
 * Get Machine Power Parameters
 */
export const getMachinePowerParametersMaasAV3MachinesSystemIdPowerParametersGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).get<
      GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetResponse,
      GetMachinePowerParametersMaasAv3MachinesSystemIdPowerParametersGetError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/machines/{system_id}/power_parameters",
    });
  };

/**
 * List Machine Pci Devices
 */
export const listMachinePciDevicesMaasAV3MachinesSystemIdPciDevicesGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetResponse,
    ListMachinePciDevicesMaasAv3MachinesSystemIdPciDevicesGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/machines/{system_id}/pci_devices",
  });
};

/**
 * List Machine Usb Devices
 */
export const listMachineUsbDevicesMaasAV3MachinesSystemIdUsbDevicesGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetResponse,
    ListMachineUsbDevicesMaasAv3MachinesSystemIdUsbDevicesGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/machines/{system_id}/usb_devices",
  });
};

/**
 * List Machines
 */
export const listMachinesMaasAV3MachinesGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListMachinesMaasAv3MachinesGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListMachinesMaasAv3MachinesGetResponse,
    ListMachinesMaasAv3MachinesGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/machines",
  });
};

/**
 * List Fabric Vlan Subnet Reserved Ips
 */
export const listFabricVlanSubnetReservedIpsMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).get<
      ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetResponse,
      ListFabricVlanSubnetReservedIpsMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsGetError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips",
    });
  };

/**
 * Create Fabric Vlan Subnet Reserved Ip
 */
export const createFabricVlanSubnetReservedIpMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPost =
  <ThrowOnError extends boolean = false>(
    options: Options<
      CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).post<
      CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostResponse,
      CreateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsPostError,
      ThrowOnError
    >({
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips",
    });
  };

/**
 * Delete Fabric Vlan Subnet Reserved Ip
 */
export const deleteFabricVlanSubnetReservedIpMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDelete =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).delete<
      DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteResponse,
      DeleteFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdDeleteError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips/{id}",
    });
  };

/**
 * Update Fabric Vlan Subnet Reserved Ip
 */
export const updateFabricVlanSubnetReservedIpMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPut =
  <ThrowOnError extends boolean = false>(
    options: Options<
      UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).put<
      UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutResponse,
      UpdateFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsIdPutError,
      ThrowOnError
    >({
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips/{id}",
    });
  };

/**
 * Get Fabric Vlan Subnet Reserved Ip
 */
export const getFabricVlanSubnetReservedIpMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).get<
      GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetResponse,
      GetFabricVlanSubnetReservedIpMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdReservedIpsReservedipIdGetError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}/reserved_ips/{reservedip_id}",
    });
  };

/**
 * List Resource Pools
 */
export const listResourcePoolsMaasAV3ResourcePoolsGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListResourcePoolsMaasAv3ResourcePoolsGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListResourcePoolsMaasAv3ResourcePoolsGetResponse,
    ListResourcePoolsMaasAv3ResourcePoolsGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/resource_pools",
  });
};

/**
 * Create Resource Pool
 */
export const createResourcePoolMaasAV3ResourcePoolsPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateResourcePoolMaasAv3ResourcePoolsPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateResourcePoolMaasAv3ResourcePoolsPostResponse,
    CreateResourcePoolMaasAv3ResourcePoolsPostError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/resource_pools",
  });
};

/**
 * Get Resource Pool
 */
export const getResourcePoolMaasAV3ResourcePoolsResourcePoolIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetResponse,
    GetResourcePoolMaasAv3ResourcePoolsResourcePoolIdGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/resource_pools/{resource_pool_id}",
  });
};

/**
 * Update Resource Pool
 */
export const updateResourcePoolMaasAV3ResourcePoolsResourcePoolIdPut = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).put<
    UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutResponse,
    UpdateResourcePoolMaasAv3ResourcePoolsResourcePoolIdPutError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/resource_pools/{resource_pool_id}",
  });
};

/**
 * List Spaces
 */
export const listSpacesMaasAV3SpacesGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListSpacesMaasAv3SpacesGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListSpacesMaasAv3SpacesGetResponse,
    ListSpacesMaasAv3SpacesGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/spaces",
  });
};

/**
 * Create Space
 */
export const createSpaceMaasAV3SpacesPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateSpaceMaasAv3SpacesPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateSpaceMaasAv3SpacesPostResponse,
    CreateSpaceMaasAv3SpacesPostError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/spaces",
  });
};

/**
 * Delete Space
 */
export const deleteSpaceMaasAV3SpacesSpaceIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteSpaceMaasAv3SpacesSpaceIdDeleteData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteSpaceMaasAv3SpacesSpaceIdDeleteResponse,
    DeleteSpaceMaasAv3SpacesSpaceIdDeleteError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/spaces/{space_id}",
  });
};

/**
 * Get Space
 */
export const getSpaceMaasAV3SpacesSpaceIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetSpaceMaasAv3SpacesSpaceIdGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetSpaceMaasAv3SpacesSpaceIdGetResponse,
    GetSpaceMaasAv3SpacesSpaceIdGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/spaces/{space_id}",
  });
};

/**
 * Update Space
 */
export const updateSpaceMaasAV3SpacesSpaceIdPut = <
  ThrowOnError extends boolean = false,
>(
  options: Options<UpdateSpaceMaasAv3SpacesSpaceIdPutData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateSpaceMaasAv3SpacesSpaceIdPutResponse,
    UpdateSpaceMaasAv3SpacesSpaceIdPutError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/spaces/{space_id}",
  });
};

/**
 * List Fabric Vlan Subnets
 */
export const listFabricVlanSubnetsMaasAV3FabricsFabricIdVlansVlanIdSubnetsGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).get<
      ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetResponse,
      ListFabricVlanSubnetsMaasAv3FabricsFabricIdVlansVlanIdSubnetsGetError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets",
    });
  };

/**
 * Create Fabric Vlan Subnet
 */
export const createFabricVlanSubnetMaasAV3FabricsFabricIdVlansVlanIdSubnetsPost =
  <ThrowOnError extends boolean = false>(
    options: Options<
      CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).post<
      CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostResponse,
      CreateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsPostError,
      ThrowOnError
    >({
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets",
    });
  };

/**
 * Delete Fabric Vlan Subnet
 */
export const deleteFabricVlanSubnetMaasAV3FabricsFabricIdVlansVlanIdSubnetsIdDelete =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).delete<
      DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteResponse,
      DeleteFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdDeleteError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{id}",
    });
  };

/**
 * Update Fabric Vlan Subnet
 */
export const updateFabricVlanSubnetMaasAV3FabricsFabricIdVlansVlanIdSubnetsIdPut =
  <ThrowOnError extends boolean = false>(
    options: Options<
      UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).put<
      UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutResponse,
      UpdateFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsIdPutError,
      ThrowOnError
    >({
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{id}",
    });
  };

/**
 * Get Fabric Vlan Subnet
 */
export const getFabricVlanSubnetMaasAV3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).get<
      GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetResponse,
      GetFabricVlanSubnetMaasAv3FabricsFabricIdVlansVlanIdSubnetsSubnetIdGetError,
      ThrowOnError
    >({
      ...options,
      security: [
        {
          scheme: "bearer",
          type: "http",
        },
      ],
      url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}/subnets/{subnet_id}",
    });
  };

/**
 * Get User Info
 */
export const getUserInfoMaasAV3UsersMeGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetUserInfoMaasAv3UsersMeGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetUserInfoMaasAv3UsersMeGetResponse,
    GetUserInfoMaasAv3UsersMeGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/users/me",
  });
};

/**
 * List User Sshkeys
 */
export const listUserSshkeysMaasAV3UsersMeSshkeysGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListUserSshkeysMaasAv3UsersMeSshkeysGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListUserSshkeysMaasAv3UsersMeSshkeysGetResponse,
    ListUserSshkeysMaasAv3UsersMeSshkeysGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/users/me/sshkeys",
  });
};

/**
 * Get User Sshkey
 */
export const getUserSshkeyMaasAV3UsersMeSshkeysSshkeyIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetResponse,
    GetUserSshkeyMaasAv3UsersMeSshkeysSshkeyIdGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/users/me/sshkeys/{sshkey_id}",
  });
};

/**
 * List Users
 */
export const listUsersMaasAV3UsersGet = <ThrowOnError extends boolean = false>(
  options?: Options<ListUsersMaasAv3UsersGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListUsersMaasAv3UsersGetResponse,
    ListUsersMaasAv3UsersGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/users",
  });
};

/**
 * Create User
 */
export const createUserMaasAV3UsersPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateUserMaasAv3UsersPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateUserMaasAv3UsersPostResponse,
    CreateUserMaasAv3UsersPostError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/users",
  });
};

/**
 * Get User
 */
export const getUserMaasAV3UsersUserIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUserMaasAv3UsersUserIdGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetUserMaasAv3UsersUserIdGetResponse,
    GetUserMaasAv3UsersUserIdGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/users/{user_id}",
  });
};

/**
 * Update User
 */
export const updateUserMaasAV3UsersUserIdPut = <
  ThrowOnError extends boolean = false,
>(
  options: Options<UpdateUserMaasAv3UsersUserIdPutData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateUserMaasAv3UsersUserIdPutResponse,
    UpdateUserMaasAv3UsersUserIdPutError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/users/{user_id}",
  });
};

/**
 * List Fabric Vlans
 */
export const listFabricVlansMaasAV3FabricsFabricIdVlansGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ListFabricVlansMaasAv3FabricsFabricIdVlansGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ListFabricVlansMaasAv3FabricsFabricIdVlansGetResponse,
    ListFabricVlansMaasAv3FabricsFabricIdVlansGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans",
  });
};

/**
 * Create Fabric Vlan
 */
export const createFabricVlanMaasAV3FabricsFabricIdVlansPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    CreateFabricVlanMaasAv3FabricsFabricIdVlansPostData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    CreateFabricVlanMaasAv3FabricsFabricIdVlansPostResponse,
    CreateFabricVlanMaasAv3FabricsFabricIdVlansPostError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans",
  });
};

/**
 * Delete Fabric Vlan
 */
export const deleteFabricVlanMaasAV3FabricsFabricIdVlansVlanIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).delete<
    DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteResponse,
    DeleteFabricVlanMaasAv3FabricsFabricIdVlansVlanIdDeleteError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}",
  });
};

/**
 * Get Fabric Vlan
 */
export const getFabricVlanMaasAV3FabricsFabricIdVlansVlanIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetResponse,
    GetFabricVlanMaasAv3FabricsFabricIdVlansVlanIdGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}",
  });
};

/**
 * Update Fabric Vlan
 */
export const updateFabricVlanMaasAV3FabricsFabricIdVlansVlanIdPut = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).put<
    UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutResponse,
    UpdateFabricVlanMaasAv3FabricsFabricIdVlansVlanIdPutError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/fabrics/{fabric_id}/vlans/{vlan_id}",
  });
};

/**
 * List Zones
 */
export const listZonesMaasAV3ZonesGet = <ThrowOnError extends boolean = false>(
  options?: Options<ListZonesMaasAv3ZonesGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListZonesMaasAv3ZonesGetResponse,
    ListZonesMaasAv3ZonesGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/zones",
  });
};

/**
 * Create Zone
 */
export const createZoneMaasAV3ZonesPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateZoneMaasAv3ZonesPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateZoneMaasAv3ZonesPostResponse,
    CreateZoneMaasAv3ZonesPostError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/zones",
  });
};

/**
 * Delete Zone
 * Deletes a zone. All the resources belonging to this zone will be moved to the default zone.
 */
export const deleteZoneMaasAV3ZonesZoneIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteZoneMaasAv3ZonesZoneIdDeleteData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteZoneMaasAv3ZonesZoneIdDeleteResponse,
    DeleteZoneMaasAv3ZonesZoneIdDeleteError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/zones/{zone_id}",
  });
};

/**
 * Get Zone
 */
export const getZoneMaasAV3ZonesZoneIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetZoneMaasAv3ZonesZoneIdGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetZoneMaasAv3ZonesZoneIdGetResponse,
    GetZoneMaasAv3ZonesZoneIdGetError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/zones/{zone_id}",
  });
};

/**
 * Update Zone
 */
export const updateZoneMaasAV3ZonesZoneIdPut = <
  ThrowOnError extends boolean = false,
>(
  options: Options<UpdateZoneMaasAv3ZonesZoneIdPutData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateZoneMaasAv3ZonesZoneIdPutResponse,
    UpdateZoneMaasAv3ZonesZoneIdPutError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/MAAS/a/v3/zones/{zone_id}",
  });
};
