// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MachineTestsTable renders 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/machine/abc123",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/machine/abc123",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/machine/abc123",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MachineTestsTable
        machineId="abc123"
        scriptResults={
          Array [
            Object {
              "ended": "Fri, 13 Nov. 2020 04:50:27",
              "endtime": 1605243027.158285,
              "estimated_runtime": "test runtime",
              "exit_status": 0,
              "hardware_type": 3,
              "id": 27,
              "interface": null,
              "name": "test name",
              "parameters": Object {},
              "physical_blockdevice": 2451,
              "result_type": 1,
              "results": Array [
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
              ],
              "runtime": "0:00:00",
              "script": 1,
              "script_version": 2,
              "started": "Fri, 13 Nov. 2020 04:50:26",
              "starttime": 605243026.966467,
              "status": 2,
              "status_name": "test status",
              "suppressed": false,
              "tags": "test, tags",
              "updated": "Fri, 13 Nov. 2020 04:50:27",
            },
            Object {
              "ended": "Fri, 13 Nov. 2020 04:50:27",
              "endtime": 1605243027.158285,
              "estimated_runtime": "test runtime",
              "exit_status": 0,
              "hardware_type": 3,
              "id": 28,
              "interface": null,
              "name": "test name",
              "parameters": Object {},
              "physical_blockdevice": 2451,
              "result_type": 1,
              "results": Array [
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
                Object {
                  "description": "test description",
                  "name": "test name",
                  "surfaced": false,
                  "title": "test title",
                  "value": "test value",
                },
              ],
              "runtime": "0:00:00",
              "script": 1,
              "script_version": 2,
              "started": "Fri, 13 Nov. 2020 04:50:26",
              "starttime": 605243026.966467,
              "status": 2,
              "status_name": "test status",
              "suppressed": false,
              "tags": "test, tags",
              "updated": "Fri, 13 Nov. 2020 04:50:27",
            },
          ]
        }
      >
        <MainTable
          className="p-table-expanding--light"
          defaultSort="name"
          defaultSortDirection="ascending"
          expanding={true}
          headers={
            Array [
              Object {
                "content": "Suppress",
              },
              Object {
                "content": "Name",
                "sortKey": "name",
              },
              Object {
                "content": "Tags",
              },
              Object {
                "content": "Runtime",
              },
              Object {
                "content": "Date",
                "sortKey": "date",
              },
              Object {
                "content": "Result",
              },
              Object {
                "className": "u-align--right",
                "content": "Actions",
              },
            ]
          }
          rows={
            Array [
              Object {
                "className": null,
                "columns": Array [
                  Object {
                    "content": <React.Fragment />,
                  },
                  Object {
                    "content": <span
                      data-test="name"
                    >
                      <i
                        className="is-inline p-icon--success"
                      />
                      test name
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="tags"
                    >
                      test, tags
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="runtime"
                    >
                      0:00:00
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="date"
                    >
                      Fri, 13 Nov. 2020 04:50:27
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="status"
                    >
                      test status
                    </span>,
                  },
                  Object {
                    "className": "u-align--right",
                    "content": <TableMenu
                      data-test="action-menu"
                      links={
                        Array [
                          Object {
                            "children": "View metrics",
                            "data-test": "action-menu-show-metrics",
                            "onClick": [Function],
                          },
                        ]
                      }
                      position="right"
                      title="Take action:"
                    />,
                  },
                ],
                "expanded": false,
                "expandedContent": <div />,
                "key": 27,
                "sortData": Object {
                  "date": "Fri, 13 Nov. 2020 04:50:27",
                  "name": "test name",
                },
              },
              Object {
                "className": null,
                "columns": Array [
                  Object {
                    "content": <React.Fragment />,
                  },
                  Object {
                    "content": <span
                      data-test="name"
                    >
                      <i
                        className="is-inline p-icon--success"
                      />
                      test name
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="tags"
                    >
                      test, tags
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="runtime"
                    >
                      0:00:00
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="date"
                    >
                      Fri, 13 Nov. 2020 04:50:27
                    </span>,
                  },
                  Object {
                    "content": <span
                      data-test="status"
                    >
                      test status
                    </span>,
                  },
                  Object {
                    "className": "u-align--right",
                    "content": <TableMenu
                      data-test="action-menu"
                      links={
                        Array [
                          Object {
                            "children": "View metrics",
                            "data-test": "action-menu-show-metrics",
                            "onClick": [Function],
                          },
                        ]
                      }
                      position="right"
                      title="Take action:"
                    />,
                  },
                ],
                "expanded": false,
                "expandedContent": <div />,
                "key": 28,
                "sortData": Object {
                  "date": "Fri, 13 Nov. 2020 04:50:27",
                  "name": "test name",
                },
              },
            ]
          }
          sortable={true}
        >
          <Table
            className="p-table-expanding--light"
            expanding={true}
            sortable={true}
          >
            <table
              className="p-table-expanding--light p-table--sortable p-table-expanding"
              role="grid"
            >
              <thead>
                <TableRow>
                  <tr
                    role="row"
                  >
                    <TableHeader
                      key="0"
                      onClick={[Function]}
                    >
                      <th
                        aria-sort="none"
                        onClick={[Function]}
                        role="columnheader"
                      >
                        Suppress
                      </th>
                    </TableHeader>
                    <TableHeader
                      key="1"
                      onClick={[Function]}
                      sort="ascending"
                    >
                      <th
                        aria-sort="ascending"
                        onClick={[Function]}
                        role="columnheader"
                      >
                        Name
                      </th>
                    </TableHeader>
                    <TableHeader
                      key="2"
                      onClick={[Function]}
                    >
                      <th
                        aria-sort="none"
                        onClick={[Function]}
                        role="columnheader"
                      >
                        Tags
                      </th>
                    </TableHeader>
                    <TableHeader
                      key="3"
                      onClick={[Function]}
                    >
                      <th
                        aria-sort="none"
                        onClick={[Function]}
                        role="columnheader"
                      >
                        Runtime
                      </th>
                    </TableHeader>
                    <TableHeader
                      key="4"
                      onClick={[Function]}
                      sort="none"
                    >
                      <th
                        aria-sort="none"
                        onClick={[Function]}
                        role="columnheader"
                      >
                        Date
                      </th>
                    </TableHeader>
                    <TableHeader
                      key="5"
                      onClick={[Function]}
                    >
                      <th
                        aria-sort="none"
                        onClick={[Function]}
                        role="columnheader"
                      >
                        Result
                      </th>
                    </TableHeader>
                    <TableHeader
                      className="u-align--right"
                      key="6"
                      onClick={[Function]}
                    >
                      <th
                        aria-sort="none"
                        className="u-align--right"
                        onClick={[Function]}
                        role="columnheader"
                      >
                        Actions
                      </th>
                    </TableHeader>
                    <TableHeader
                      aria-hidden="true"
                    >
                      <th
                        aria-hidden="true"
                        aria-sort="none"
                        role="columnheader"
                      />
                    </TableHeader>
                  </tr>
                </TableRow>
              </thead>
              <tbody>
                <TableRow
                  className={null}
                  key="27"
                >
                  <tr
                    className={null}
                    role="row"
                  >
                    <TableCell
                      key="0"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      />
                    </TableCell>
                    <TableCell
                      key="1"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="name"
                        >
                          <i
                            className="is-inline p-icon--success"
                          />
                          test name
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="2"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="tags"
                        >
                          test, tags
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="3"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="runtime"
                        >
                          0:00:00
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="4"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="date"
                        >
                          Fri, 13 Nov. 2020 04:50:27
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="5"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="status"
                        >
                          test status
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      className="u-align--right"
                      key="6"
                    >
                      <td
                        aria-hidden={false}
                        className="u-align--right"
                        role="gridcell"
                      >
                        <TableMenu
                          data-test="action-menu"
                          links={
                            Array [
                              Object {
                                "children": "View metrics",
                                "data-test": "action-menu-show-metrics",
                                "onClick": [Function],
                              },
                            ]
                          }
                          position="right"
                          title="Take action:"
                        >
                          <ContextualMenu
                            className="p-table-menu"
                            hasToggleIcon={true}
                            links={
                              Array [
                                "Take action:",
                                Object {
                                  "children": "View metrics",
                                  "data-test": "action-menu-show-metrics",
                                  "onClick": [Function],
                                },
                              ]
                            }
                            position="right"
                            toggleAppearance="base"
                            toggleClassName="u-no-margin--bottom p-table-menu__toggle"
                            toggleDisabled={false}
                          >
                            <span
                              className="p-table-menu p-contextual-menu"
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Button
                                appearance="base"
                                aria-expanded="false"
                                aria-haspopup="true"
                                className="p-contextual-menu__toggle u-no-margin--bottom p-table-menu__toggle"
                                disabled={false}
                                hasIcon={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <button
                                  aria-expanded="false"
                                  aria-haspopup="true"
                                  className="p-button--base has-icon p-contextual-menu__toggle u-no-margin--bottom p-table-menu__toggle"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <i
                                    className="p-icon--contextual-menu p-contextual-menu__indicator"
                                  />
                                </button>
                              </Button>
                            </span>
                          </ContextualMenu>
                        </TableMenu>
                      </td>
                    </TableCell>
                    <TableCell
                      expanding={true}
                      hidden={true}
                    >
                      <td
                        aria-hidden={true}
                        className="p-table-expanding__panel"
                        role="gridcell"
                      >
                        <div />
                      </td>
                    </TableCell>
                  </tr>
                </TableRow>
                <TableRow
                  className={null}
                  key="28"
                >
                  <tr
                    className={null}
                    role="row"
                  >
                    <TableCell
                      key="0"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      />
                    </TableCell>
                    <TableCell
                      key="1"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="name"
                        >
                          <i
                            className="is-inline p-icon--success"
                          />
                          test name
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="2"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="tags"
                        >
                          test, tags
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="3"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="runtime"
                        >
                          0:00:00
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="4"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="date"
                        >
                          Fri, 13 Nov. 2020 04:50:27
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      key="5"
                    >
                      <td
                        aria-hidden={false}
                        className=""
                        role="gridcell"
                      >
                        <span
                          data-test="status"
                        >
                          test status
                        </span>
                      </td>
                    </TableCell>
                    <TableCell
                      className="u-align--right"
                      key="6"
                    >
                      <td
                        aria-hidden={false}
                        className="u-align--right"
                        role="gridcell"
                      >
                        <TableMenu
                          data-test="action-menu"
                          links={
                            Array [
                              Object {
                                "children": "View metrics",
                                "data-test": "action-menu-show-metrics",
                                "onClick": [Function],
                              },
                            ]
                          }
                          position="right"
                          title="Take action:"
                        >
                          <ContextualMenu
                            className="p-table-menu"
                            hasToggleIcon={true}
                            links={
                              Array [
                                "Take action:",
                                Object {
                                  "children": "View metrics",
                                  "data-test": "action-menu-show-metrics",
                                  "onClick": [Function],
                                },
                              ]
                            }
                            position="right"
                            toggleAppearance="base"
                            toggleClassName="u-no-margin--bottom p-table-menu__toggle"
                            toggleDisabled={false}
                          >
                            <span
                              className="p-table-menu p-contextual-menu"
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Button
                                appearance="base"
                                aria-expanded="false"
                                aria-haspopup="true"
                                className="p-contextual-menu__toggle u-no-margin--bottom p-table-menu__toggle"
                                disabled={false}
                                hasIcon={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <button
                                  aria-expanded="false"
                                  aria-haspopup="true"
                                  className="p-button--base has-icon p-contextual-menu__toggle u-no-margin--bottom p-table-menu__toggle"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <i
                                    className="p-icon--contextual-menu p-contextual-menu__indicator"
                                  />
                                </button>
                              </Button>
                            </span>
                          </ContextualMenu>
                        </TableMenu>
                      </td>
                    </TableCell>
                    <TableCell
                      expanding={true}
                      hidden={true}
                    >
                      <td
                        aria-hidden={true}
                        className="p-table-expanding__panel"
                        role="gridcell"
                      >
                        <div />
                      </td>
                    </TableCell>
                  </tr>
                </TableRow>
              </tbody>
            </table>
          </Table>
        </MainTable>
      </MachineTestsTable>
    </Router>
  </MemoryRouter>
</Provider>
`;
