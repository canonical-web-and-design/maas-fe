// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserFormFields can render 1`] = `
<UserFormFields
  formikProps={
    Object {
      "errors": Object {},
      "handleBlur": [MockFunction],
      "handleChange": [MockFunction],
      "handleSubmit": [MockFunction],
      "setStatus": [MockFunction],
      "touched": Object {},
      "values": Object {},
    }
  }
>
  <Form
    onSubmit={[MockFunction]}
  >
    <form
      className=""
      onSubmit={[MockFunction]}
    >
      <Row>
        <div
          className="row"
        >
          <Col
            size="8"
          >
            <div
              className="col-8"
            >
              <FormikField
                fieldKey="username"
                formikProps={
                  Object {
                    "errors": Object {},
                    "handleBlur": [MockFunction],
                    "handleChange": [MockFunction],
                    "handleSubmit": [MockFunction],
                    "setStatus": [MockFunction],
                    "touched": Object {},
                    "values": Object {},
                  }
                }
                help="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                label="Username"
                required={true}
                type="text"
              >
                <Input
                  help="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                  id="00000000-0000-0000-0000-000000000000"
                  label="Username"
                  name="username"
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  required={true}
                  type="text"
                >
                  <Field
                    forId="00000000-0000-0000-0000-000000000000"
                    help="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                    label="Username"
                    labelFirst={true}
                    required={true}
                  >
                    <div
                      className="p-form__group p-form-validation"
                    >
                      <Label
                        forId="00000000-0000-0000-0000-000000000000"
                        required={true}
                      >
                        <label
                          className="p-form__label is-required"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                        >
                          Username
                        </label>
                      </Label>
                      <div
                        className="p-form__control u-clearfix"
                      >
                        <input
                          className="p-form-validation__input"
                          id="00000000-0000-0000-0000-000000000000"
                          name="username"
                          onBlur={[MockFunction]}
                          onChange={[Function]}
                          type="text"
                        />
                        <p
                          className="p-form-help-text"
                        >
                          Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
                        </p>
                      </div>
                    </div>
                  </Field>
                </Input>
              </FormikField>
              <FormikField
                fieldKey="fullName"
                formikProps={
                  Object {
                    "errors": Object {},
                    "handleBlur": [MockFunction],
                    "handleChange": [MockFunction],
                    "handleSubmit": [MockFunction],
                    "setStatus": [MockFunction],
                    "touched": Object {},
                    "values": Object {},
                  }
                }
                label="Full name"
                type="text"
              >
                <Input
                  id="00000000-0000-0000-0000-000000000000"
                  label="Full name"
                  name="fullName"
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  type="text"
                >
                  <Field
                    forId="00000000-0000-0000-0000-000000000000"
                    label="Full name"
                    labelFirst={true}
                  >
                    <div
                      className="p-form__group p-form-validation"
                    >
                      <Label
                        forId="00000000-0000-0000-0000-000000000000"
                      >
                        <label
                          className="p-form__label"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                        >
                          Full name
                        </label>
                      </Label>
                      <div
                        className="p-form__control u-clearfix"
                      >
                        <input
                          className="p-form-validation__input"
                          id="00000000-0000-0000-0000-000000000000"
                          name="fullName"
                          onBlur={[MockFunction]}
                          onChange={[Function]}
                          type="text"
                        />
                      </div>
                    </div>
                  </Field>
                </Input>
              </FormikField>
              <FormikField
                fieldKey="email"
                formikProps={
                  Object {
                    "errors": Object {},
                    "handleBlur": [MockFunction],
                    "handleChange": [MockFunction],
                    "handleSubmit": [MockFunction],
                    "setStatus": [MockFunction],
                    "touched": Object {},
                    "values": Object {},
                  }
                }
                label="Email address"
                required={true}
                type="email"
              >
                <Input
                  id="00000000-0000-0000-0000-000000000000"
                  label="Email address"
                  name="email"
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  required={true}
                  type="email"
                >
                  <Field
                    forId="00000000-0000-0000-0000-000000000000"
                    label="Email address"
                    labelFirst={true}
                    required={true}
                  >
                    <div
                      className="p-form__group p-form-validation"
                    >
                      <Label
                        forId="00000000-0000-0000-0000-000000000000"
                        required={true}
                      >
                        <label
                          className="p-form__label is-required"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                        >
                          Email address
                        </label>
                      </Label>
                      <div
                        className="p-form__control u-clearfix"
                      >
                        <input
                          className="p-form-validation__input"
                          id="00000000-0000-0000-0000-000000000000"
                          name="email"
                          onBlur={[MockFunction]}
                          onChange={[Function]}
                          type="email"
                        />
                      </div>
                    </div>
                  </Field>
                </Input>
              </FormikField>
              <FormikField
                fieldKey="isSuperuser"
                formikProps={
                  Object {
                    "errors": Object {},
                    "handleBlur": [MockFunction],
                    "handleChange": [MockFunction],
                    "handleSubmit": [MockFunction],
                    "setStatus": [MockFunction],
                    "touched": Object {},
                    "values": Object {},
                  }
                }
                label="MAAS administrator"
                type="checkbox"
              >
                <Input
                  id="00000000-0000-0000-0000-000000000000"
                  label="MAAS administrator"
                  name="isSuperuser"
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  type="checkbox"
                >
                  <Field
                    forId="00000000-0000-0000-0000-000000000000"
                    label="MAAS administrator"
                    labelFirst={false}
                  >
                    <div
                      className="p-form__group p-form-validation"
                    >
                      <div
                        className="p-form__control u-clearfix"
                      >
                        <input
                          className="p-form-validation__input"
                          id="00000000-0000-0000-0000-000000000000"
                          name="isSuperuser"
                          onBlur={[MockFunction]}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <Label
                          forId="00000000-0000-0000-0000-000000000000"
                        >
                          <label
                            className="p-form__label"
                            htmlFor="00000000-0000-0000-0000-000000000000"
                          >
                            MAAS administrator
                          </label>
                        </Label>
                      </div>
                    </div>
                  </Field>
                </Input>
              </FormikField>
              <FormikField
                fieldKey="password"
                formikProps={
                  Object {
                    "errors": Object {},
                    "handleBlur": [MockFunction],
                    "handleChange": [MockFunction],
                    "handleSubmit": [MockFunction],
                    "setStatus": [MockFunction],
                    "touched": Object {},
                    "values": Object {},
                  }
                }
                label="Password"
                required={true}
                type="password"
              >
                <Input
                  id="00000000-0000-0000-0000-000000000000"
                  label="Password"
                  name="password"
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  required={true}
                  type="password"
                >
                  <Field
                    forId="00000000-0000-0000-0000-000000000000"
                    label="Password"
                    labelFirst={true}
                    required={true}
                  >
                    <div
                      className="p-form__group p-form-validation"
                    >
                      <Label
                        forId="00000000-0000-0000-0000-000000000000"
                        required={true}
                      >
                        <label
                          className="p-form__label is-required"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                        >
                          Password
                        </label>
                      </Label>
                      <div
                        className="p-form__control u-clearfix"
                      >
                        <input
                          className="p-form-validation__input"
                          id="00000000-0000-0000-0000-000000000000"
                          name="password"
                          onBlur={[MockFunction]}
                          onChange={[Function]}
                          type="password"
                        />
                      </div>
                    </div>
                  </Field>
                </Input>
              </FormikField>
              <FormikField
                fieldKey="passwordConfirm"
                formikProps={
                  Object {
                    "errors": Object {},
                    "handleBlur": [MockFunction],
                    "handleChange": [MockFunction],
                    "handleSubmit": [MockFunction],
                    "setStatus": [MockFunction],
                    "touched": Object {},
                    "values": Object {},
                  }
                }
                help="Enter the same password as before, for verification"
                label="Password (again)"
                required={true}
                type="password"
              >
                <Input
                  help="Enter the same password as before, for verification"
                  id="00000000-0000-0000-0000-000000000000"
                  label="Password (again)"
                  name="passwordConfirm"
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  required={true}
                  type="password"
                >
                  <Field
                    forId="00000000-0000-0000-0000-000000000000"
                    help="Enter the same password as before, for verification"
                    label="Password (again)"
                    labelFirst={true}
                    required={true}
                  >
                    <div
                      className="p-form__group p-form-validation"
                    >
                      <Label
                        forId="00000000-0000-0000-0000-000000000000"
                        required={true}
                      >
                        <label
                          className="p-form__label is-required"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                        >
                          Password (again)
                        </label>
                      </Label>
                      <div
                        className="p-form__control u-clearfix"
                      >
                        <input
                          className="p-form-validation__input"
                          id="00000000-0000-0000-0000-000000000000"
                          name="passwordConfirm"
                          onBlur={[MockFunction]}
                          onChange={[Function]}
                          type="password"
                        />
                        <p
                          className="p-form-help-text"
                        >
                          Enter the same password as before, for verification
                        </p>
                      </div>
                    </div>
                  </Field>
                </Input>
              </FormikField>
            </div>
          </Col>
        </div>
      </Row>
      <div
        className="user-form__buttons"
      >
        <Button
          appearance="base"
          className="u-no-margin--bottom"
          onClick={[Function]}
          type="button"
        >
          <button
            className="u-no-margin--bottom p-button--base"
            onClick={[Function]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <ActionButton
          appearance="positive"
          className="u-no-margin--bottom"
          disabled={false}
          loading={false}
          success={false}
          type="submit"
        >
          <Button
            appearance="positive"
            className="u-no-margin--bottom p-action-button"
            disabled={false}
            style={Object {}}
            type="submit"
          >
            <button
              className="u-no-margin--bottom p-action-button p-button--positive"
              disabled={false}
              style={Object {}}
              type="submit"
            >
              Save user
            </button>
          </Button>
        </ActionButton>
      </div>
    </form>
  </Form>
</UserFormFields>
`;
