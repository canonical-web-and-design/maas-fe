// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserForm can render 1`] = `
<UserForm
  title="Add user"
>
  <Card
    className="user-form"
    highlighted={true}
  >
    <div
      className="user-form p-card--highlighted"
    >
      <div
        className="p-card__content"
      >
        <Row>
          <div
            className="row"
          >
            <Col
              size="3"
            >
              <div
                className="col-3"
              >
                <h4>
                  Add user
                </h4>
              </div>
            </Col>
            <Col
              size="7"
            >
              <div
                className="col-7"
              >
                <Formik
                  enableReinitialize={false}
                  initialValues={
                    Object {
                      "email": "",
                      "fullName": "",
                      "isSuperuser": false,
                      "password": "",
                      "passwordConfirm": "",
                      "username": "",
                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                  validationSchema={
                    ObjectSchema {
                      "_blacklist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": undefined,
                      "_nodes": Array [
                        "username",
                        "passwordConfirm",
                        "password",
                        "is_superuser",
                        "fullName",
                        "email",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "fields": Object {
                        "email": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": true,
                            "undefined": false,
                          },
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "fullName": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {},
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "is_superuser": BooleanSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {},
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "boolean",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "password": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "min": true,
                            "required": true,
                          },
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "passwordConfirm": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {},
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {
                              "password" => Reference {
                                "getter": [Function],
                                "isContext": false,
                                "isSibling": true,
                                "isValue": false,
                                "key": "password",
                                "map": undefined,
                                "path": "password",
                              },
                            },
                          },
                          "_whitelistError": [Function],
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "username": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "max": true,
                            "required": true,
                            "undefined": false,
                          },
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                    }
                  }
                >
                  <UserFormFields
                    editing={false}
                    formikProps={
                      Object {
                        "dirty": false,
                        "errors": Object {},
                        "handleBlur": [Function],
                        "handleChange": [Function],
                        "handleReset": [Function],
                        "handleSubmit": [Function],
                        "initialValues": Object {
                          "email": "",
                          "fullName": "",
                          "isSuperuser": false,
                          "password": "",
                          "passwordConfirm": "",
                          "username": "",
                        },
                        "isSubmitting": false,
                        "isValid": false,
                        "isValidating": false,
                        "registerField": [Function],
                        "resetForm": [Function],
                        "setError": [Function],
                        "setErrors": [Function],
                        "setFieldError": [Function],
                        "setFieldTouched": [Function],
                        "setFieldValue": [Function],
                        "setFormikState": [Function],
                        "setStatus": [Function],
                        "setSubmitting": [Function],
                        "setTouched": [Function],
                        "setValues": [Function],
                        "status": undefined,
                        "submitCount": 0,
                        "submitForm": [Function],
                        "touched": Object {},
                        "unregisterField": [Function],
                        "validateField": [Function],
                        "validateForm": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                        "values": Object {
                          "email": "",
                          "fullName": "",
                          "isSuperuser": false,
                          "password": "",
                          "passwordConfirm": "",
                          "username": "",
                        },
                      }
                    }
                  >
                    <Form
                      onSubmit={[Function]}
                    >
                      <form
                        className=""
                        onSubmit={[Function]}
                      >
                        <Row>
                          <div
                            className="row"
                          >
                            <Col
                              size="8"
                            >
                              <div
                                className="col-8"
                              >
                                <FormikField
                                  fieldKey="username"
                                  formikProps={
                                    Object {
                                      "dirty": false,
                                      "errors": Object {},
                                      "handleBlur": [Function],
                                      "handleChange": [Function],
                                      "handleReset": [Function],
                                      "handleSubmit": [Function],
                                      "initialValues": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "registerField": [Function],
                                      "resetForm": [Function],
                                      "setError": [Function],
                                      "setErrors": [Function],
                                      "setFieldError": [Function],
                                      "setFieldTouched": [Function],
                                      "setFieldValue": [Function],
                                      "setFormikState": [Function],
                                      "setStatus": [Function],
                                      "setSubmitting": [Function],
                                      "setTouched": [Function],
                                      "setValues": [Function],
                                      "status": undefined,
                                      "submitCount": 0,
                                      "submitForm": [Function],
                                      "touched": Object {},
                                      "unregisterField": [Function],
                                      "validateField": [Function],
                                      "validateForm": [Function],
                                      "validateOnBlur": true,
                                      "validateOnChange": true,
                                      "values": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                    }
                                  }
                                  help="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                                  label="Username"
                                  required={true}
                                  type="text"
                                >
                                  <Input
                                    help="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                                    id="00000000-0000-0000-0000-000000000000"
                                    label="Username"
                                    name="username"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    required={true}
                                    type="text"
                                    value=""
                                  >
                                    <Field
                                      forId="00000000-0000-0000-0000-000000000000"
                                      help="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                                      label="Username"
                                      labelFirst={true}
                                      required={true}
                                    >
                                      <div
                                        className="p-form__group p-form-validation"
                                      >
                                        <Label
                                          forId="00000000-0000-0000-0000-000000000000"
                                          required={true}
                                        >
                                          <label
                                            className="p-form__label is-required"
                                            htmlFor="00000000-0000-0000-0000-000000000000"
                                          >
                                            Username
                                          </label>
                                        </Label>
                                        <div
                                          className="p-form__control u-clearfix"
                                        >
                                          <input
                                            className="p-form-validation__input"
                                            id="00000000-0000-0000-0000-000000000000"
                                            name="username"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          />
                                          <p
                                            className="p-form-help-text"
                                          >
                                            Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
                                          </p>
                                        </div>
                                      </div>
                                    </Field>
                                  </Input>
                                </FormikField>
                                <FormikField
                                  fieldKey="fullName"
                                  formikProps={
                                    Object {
                                      "dirty": false,
                                      "errors": Object {},
                                      "handleBlur": [Function],
                                      "handleChange": [Function],
                                      "handleReset": [Function],
                                      "handleSubmit": [Function],
                                      "initialValues": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "registerField": [Function],
                                      "resetForm": [Function],
                                      "setError": [Function],
                                      "setErrors": [Function],
                                      "setFieldError": [Function],
                                      "setFieldTouched": [Function],
                                      "setFieldValue": [Function],
                                      "setFormikState": [Function],
                                      "setStatus": [Function],
                                      "setSubmitting": [Function],
                                      "setTouched": [Function],
                                      "setValues": [Function],
                                      "status": undefined,
                                      "submitCount": 0,
                                      "submitForm": [Function],
                                      "touched": Object {},
                                      "unregisterField": [Function],
                                      "validateField": [Function],
                                      "validateForm": [Function],
                                      "validateOnBlur": true,
                                      "validateOnChange": true,
                                      "values": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                    }
                                  }
                                  label="Full name"
                                  type="text"
                                >
                                  <Input
                                    id="00000000-0000-0000-0000-000000000000"
                                    label="Full name"
                                    name="fullName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  >
                                    <Field
                                      forId="00000000-0000-0000-0000-000000000000"
                                      label="Full name"
                                      labelFirst={true}
                                    >
                                      <div
                                        className="p-form__group p-form-validation"
                                      >
                                        <Label
                                          forId="00000000-0000-0000-0000-000000000000"
                                        >
                                          <label
                                            className="p-form__label"
                                            htmlFor="00000000-0000-0000-0000-000000000000"
                                          >
                                            Full name
                                          </label>
                                        </Label>
                                        <div
                                          className="p-form__control u-clearfix"
                                        >
                                          <input
                                            className="p-form-validation__input"
                                            id="00000000-0000-0000-0000-000000000000"
                                            name="fullName"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </Field>
                                  </Input>
                                </FormikField>
                                <FormikField
                                  fieldKey="email"
                                  formikProps={
                                    Object {
                                      "dirty": false,
                                      "errors": Object {},
                                      "handleBlur": [Function],
                                      "handleChange": [Function],
                                      "handleReset": [Function],
                                      "handleSubmit": [Function],
                                      "initialValues": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "registerField": [Function],
                                      "resetForm": [Function],
                                      "setError": [Function],
                                      "setErrors": [Function],
                                      "setFieldError": [Function],
                                      "setFieldTouched": [Function],
                                      "setFieldValue": [Function],
                                      "setFormikState": [Function],
                                      "setStatus": [Function],
                                      "setSubmitting": [Function],
                                      "setTouched": [Function],
                                      "setValues": [Function],
                                      "status": undefined,
                                      "submitCount": 0,
                                      "submitForm": [Function],
                                      "touched": Object {},
                                      "unregisterField": [Function],
                                      "validateField": [Function],
                                      "validateForm": [Function],
                                      "validateOnBlur": true,
                                      "validateOnChange": true,
                                      "values": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                    }
                                  }
                                  label="Email address"
                                  required={true}
                                  type="email"
                                >
                                  <Input
                                    id="00000000-0000-0000-0000-000000000000"
                                    label="Email address"
                                    name="email"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    required={true}
                                    type="email"
                                    value=""
                                  >
                                    <Field
                                      forId="00000000-0000-0000-0000-000000000000"
                                      label="Email address"
                                      labelFirst={true}
                                      required={true}
                                    >
                                      <div
                                        className="p-form__group p-form-validation"
                                      >
                                        <Label
                                          forId="00000000-0000-0000-0000-000000000000"
                                          required={true}
                                        >
                                          <label
                                            className="p-form__label is-required"
                                            htmlFor="00000000-0000-0000-0000-000000000000"
                                          >
                                            Email address
                                          </label>
                                        </Label>
                                        <div
                                          className="p-form__control u-clearfix"
                                        >
                                          <input
                                            className="p-form-validation__input"
                                            id="00000000-0000-0000-0000-000000000000"
                                            name="email"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="email"
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </Field>
                                  </Input>
                                </FormikField>
                                <FormikField
                                  fieldKey="isSuperuser"
                                  formikProps={
                                    Object {
                                      "dirty": false,
                                      "errors": Object {},
                                      "handleBlur": [Function],
                                      "handleChange": [Function],
                                      "handleReset": [Function],
                                      "handleSubmit": [Function],
                                      "initialValues": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "registerField": [Function],
                                      "resetForm": [Function],
                                      "setError": [Function],
                                      "setErrors": [Function],
                                      "setFieldError": [Function],
                                      "setFieldTouched": [Function],
                                      "setFieldValue": [Function],
                                      "setFormikState": [Function],
                                      "setStatus": [Function],
                                      "setSubmitting": [Function],
                                      "setTouched": [Function],
                                      "setValues": [Function],
                                      "status": undefined,
                                      "submitCount": 0,
                                      "submitForm": [Function],
                                      "touched": Object {},
                                      "unregisterField": [Function],
                                      "validateField": [Function],
                                      "validateForm": [Function],
                                      "validateOnBlur": true,
                                      "validateOnChange": true,
                                      "values": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                    }
                                  }
                                  label="MAAS administrator"
                                  type="checkbox"
                                >
                                  <Input
                                    id="00000000-0000-0000-0000-000000000000"
                                    label="MAAS administrator"
                                    name="isSuperuser"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value={false}
                                  >
                                    <Field
                                      forId="00000000-0000-0000-0000-000000000000"
                                      label="MAAS administrator"
                                      labelFirst={false}
                                    >
                                      <div
                                        className="p-form__group p-form-validation"
                                      >
                                        <div
                                          className="p-form__control u-clearfix"
                                        >
                                          <input
                                            className="p-form-validation__input"
                                            id="00000000-0000-0000-0000-000000000000"
                                            name="isSuperuser"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="checkbox"
                                            value={false}
                                          />
                                          <Label
                                            forId="00000000-0000-0000-0000-000000000000"
                                          >
                                            <label
                                              className="p-form__label"
                                              htmlFor="00000000-0000-0000-0000-000000000000"
                                            >
                                              MAAS administrator
                                            </label>
                                          </Label>
                                        </div>
                                      </div>
                                    </Field>
                                  </Input>
                                </FormikField>
                                <FormikField
                                  fieldKey="password"
                                  formikProps={
                                    Object {
                                      "dirty": false,
                                      "errors": Object {},
                                      "handleBlur": [Function],
                                      "handleChange": [Function],
                                      "handleReset": [Function],
                                      "handleSubmit": [Function],
                                      "initialValues": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "registerField": [Function],
                                      "resetForm": [Function],
                                      "setError": [Function],
                                      "setErrors": [Function],
                                      "setFieldError": [Function],
                                      "setFieldTouched": [Function],
                                      "setFieldValue": [Function],
                                      "setFormikState": [Function],
                                      "setStatus": [Function],
                                      "setSubmitting": [Function],
                                      "setTouched": [Function],
                                      "setValues": [Function],
                                      "status": undefined,
                                      "submitCount": 0,
                                      "submitForm": [Function],
                                      "touched": Object {},
                                      "unregisterField": [Function],
                                      "validateField": [Function],
                                      "validateForm": [Function],
                                      "validateOnBlur": true,
                                      "validateOnChange": true,
                                      "values": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                    }
                                  }
                                  label="Password"
                                  required={true}
                                  type="password"
                                >
                                  <Input
                                    id="00000000-0000-0000-0000-000000000000"
                                    label="Password"
                                    name="password"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  >
                                    <Field
                                      forId="00000000-0000-0000-0000-000000000000"
                                      label="Password"
                                      labelFirst={true}
                                      required={true}
                                    >
                                      <div
                                        className="p-form__group p-form-validation"
                                      >
                                        <Label
                                          forId="00000000-0000-0000-0000-000000000000"
                                          required={true}
                                        >
                                          <label
                                            className="p-form__label is-required"
                                            htmlFor="00000000-0000-0000-0000-000000000000"
                                          >
                                            Password
                                          </label>
                                        </Label>
                                        <div
                                          className="p-form__control u-clearfix"
                                        >
                                          <input
                                            className="p-form-validation__input"
                                            id="00000000-0000-0000-0000-000000000000"
                                            name="password"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </Field>
                                  </Input>
                                </FormikField>
                                <FormikField
                                  fieldKey="passwordConfirm"
                                  formikProps={
                                    Object {
                                      "dirty": false,
                                      "errors": Object {},
                                      "handleBlur": [Function],
                                      "handleChange": [Function],
                                      "handleReset": [Function],
                                      "handleSubmit": [Function],
                                      "initialValues": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "registerField": [Function],
                                      "resetForm": [Function],
                                      "setError": [Function],
                                      "setErrors": [Function],
                                      "setFieldError": [Function],
                                      "setFieldTouched": [Function],
                                      "setFieldValue": [Function],
                                      "setFormikState": [Function],
                                      "setStatus": [Function],
                                      "setSubmitting": [Function],
                                      "setTouched": [Function],
                                      "setValues": [Function],
                                      "status": undefined,
                                      "submitCount": 0,
                                      "submitForm": [Function],
                                      "touched": Object {},
                                      "unregisterField": [Function],
                                      "validateField": [Function],
                                      "validateForm": [Function],
                                      "validateOnBlur": true,
                                      "validateOnChange": true,
                                      "values": Object {
                                        "email": "",
                                        "fullName": "",
                                        "isSuperuser": false,
                                        "password": "",
                                        "passwordConfirm": "",
                                        "username": "",
                                      },
                                    }
                                  }
                                  help="Enter the same password as before, for verification"
                                  label="Password (again)"
                                  required={true}
                                  type="password"
                                >
                                  <Input
                                    help="Enter the same password as before, for verification"
                                    id="00000000-0000-0000-0000-000000000000"
                                    label="Password (again)"
                                    name="passwordConfirm"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                    value=""
                                  >
                                    <Field
                                      forId="00000000-0000-0000-0000-000000000000"
                                      help="Enter the same password as before, for verification"
                                      label="Password (again)"
                                      labelFirst={true}
                                      required={true}
                                    >
                                      <div
                                        className="p-form__group p-form-validation"
                                      >
                                        <Label
                                          forId="00000000-0000-0000-0000-000000000000"
                                          required={true}
                                        >
                                          <label
                                            className="p-form__label is-required"
                                            htmlFor="00000000-0000-0000-0000-000000000000"
                                          >
                                            Password (again)
                                          </label>
                                        </Label>
                                        <div
                                          className="p-form__control u-clearfix"
                                        >
                                          <input
                                            className="p-form-validation__input"
                                            id="00000000-0000-0000-0000-000000000000"
                                            name="passwordConfirm"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="password"
                                            value=""
                                          />
                                          <p
                                            className="p-form-help-text"
                                          >
                                            Enter the same password as before, for verification
                                          </p>
                                        </div>
                                      </div>
                                    </Field>
                                  </Input>
                                </FormikField>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <div
                          className="user-form__buttons"
                        >
                          <Button
                            appearance="base"
                            className="u-no-margin--bottom"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="u-no-margin--bottom p-button--base"
                              onClick={[Function]}
                              type="button"
                            >
                              Cancel
                            </button>
                          </Button>
                          <ActionButton
                            appearance="positive"
                            className="u-no-margin--bottom"
                            disabled={true}
                            loading={false}
                            success={false}
                            type="submit"
                          >
                            <button
                              className="p-action-button p-button--positive is-disabled"
                              disabled={true}
                              type="submit"
                            >
                              Save user
                            </button>
                          </ActionButton>
                        </div>
                      </form>
                    </Form>
                  </UserFormFields>
                </Formik>
              </div>
            </Col>
          </div>
        </Row>
      </div>
    </div>
  </Card>
</UserForm>
`;
