// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserForm can render 1`] = `
<Card
  className="user-form"
  highlighted={true}
>
  <Row>
    <Col
      size="3"
    >
      <h4>
        Add user
      </h4>
    </Col>
    <Col
      size="7"
    >
      <Formik
        enableReinitialize={false}
        initialValues={
          Object {
            "email": "",
            "fullName": "",
            "isSuperuser": false,
            "password": "",
            "passwordConfirm": "",
            "username": "",
          }
        }
        isInitialValid={false}
        onSubmit={[Function]}
        render={[Function]}
        validateOnBlur={true}
        validateOnChange={true}
        validationSchema={
          ObjectSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_defaultDefault": [Function],
            "_deps": Array [],
            "_excludedEdges": Array [],
            "_exclusive": Object {},
            "_mutate": undefined,
            "_nodes": Array [
              "username",
              "passwordConfirm",
              "password",
              "is_superuser",
              "fullName",
              "email",
            ],
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "object",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "fields": Object {
              "email": StringSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {
                  "required": true,
                  "undefined": false,
                },
                "_mutate": undefined,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "string",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "tests": Array [
                  [Function],
                  [Function],
                ],
                "transforms": Array [
                  [Function],
                ],
              },
              "fullName": StringSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {},
                "_mutate": undefined,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "string",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
              },
              "is_superuser": BooleanSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {},
                "_mutate": undefined,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "boolean",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
              },
              "password": StringSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {
                  "min": true,
                  "required": true,
                },
                "_mutate": undefined,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "string",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "tests": Array [
                  [Function],
                  [Function],
                ],
                "transforms": Array [
                  [Function],
                ],
              },
              "passwordConfirm": StringSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {},
                "_mutate": undefined,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "string",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {
                    "password" => Reference {
                      "getter": [Function],
                      "isContext": false,
                      "isSibling": true,
                      "isValue": false,
                      "key": "password",
                      "map": undefined,
                      "path": "password",
                    },
                  },
                },
                "_whitelistError": [Function],
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
              },
              "username": StringSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {
                  "max": true,
                  "required": true,
                  "undefined": false,
                },
                "_mutate": undefined,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "string",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "tests": Array [
                  [Function],
                  [Function],
                  [Function],
                ],
                "transforms": Array [
                  [Function],
                ],
              },
            },
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
          }
        }
      />
    </Col>
  </Row>
</Card>
`;
