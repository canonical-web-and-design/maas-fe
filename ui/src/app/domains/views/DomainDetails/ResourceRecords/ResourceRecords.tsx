import {
  Col,
  ContextualMenu,
  MainTable,
  Row,
  Strip,
} from "@canonical/react-components";
import { useSelector } from "react-redux";
import { Link } from "react-router-dom";

import LegacyLink from "app/base/components/LegacyLink";
import baseURLs from "app/base/urls";
import machineURLs from "app/machines/urls";
import authSelectors from "app/store/auth/selectors";
import domainsSelectors from "app/store/domain/selectors";
import type { Domain } from "app/store/domain/types";
import type { RootState } from "app/store/root/types";
import { NodeType } from "app/store/types/node";

type Props = {
  id: Domain["id"];
};

const ResourceRecords = ({ id }: Props): JSX.Element | null => {
  const domain = useSelector((state: RootState) =>
    domainsSelectors.getById(state, Number(id))
  );

  const isAdmin = useSelector(authSelectors.isAdmin);

  if (!domain || !domain.rrsets || domain.rrsets.length === 0) {
    return null;
  }

  const headers = [
    {
      content: "Name",
      sortKey: "name",
    },
    {
      content: "Type",
      sortKey: "type",
    },
    {
      content: "TTL",
      sortKey: "ttl",
    },
    {
      content: "Data",
      sortKey: "data",
    },
    {
      content: "Actions",
      className: "u-align--right",
    },
  ];

  const rows = domain.rrsets.map((resource) => {
    let nameCell = <>{resource.name}</>;

    // We can't edit records that don't have a dnsresource_id.
    // (If the row doesn't have one, it has probably been automatically
    // generated by means of a deployed node, or some other reason.)
    const isAutogenerated = !resource.dnsresource_id;
    const canEdit = !isAutogenerated && isAdmin;

    if (resource.node_type != null && resource.system_id !== null) {
      switch (resource.node_type) {
        case NodeType.MACHINE:
          nameCell = (
            <Link to={machineURLs.machine.index({ id: resource.system_id })}>
              {resource.name}
            </Link>
          );
          break;
        case NodeType.DEVICE:
          nameCell = (
            <LegacyLink route={baseURLs.device({ id: resource.system_id })}>
              {resource.name}
            </LegacyLink>
          );
          break;
        case NodeType.RACK_CONTROLLER:
        case NodeType.REGION_CONTROLLER:
        case NodeType.REGION_AND_RACK_CONTROLLER:
          nameCell = (
            <LegacyLink route={baseURLs.controller({ id: resource.system_id })}>
              {resource.name}
            </LegacyLink>
          );
          break;
      }
    }

    return {
      columns: [
        {
          content: nameCell,
        },
        {
          content: resource.rrtype,
        },
        {
          content: resource.ttl || "(default)",
        },
        {
          content: resource.rrdata,
        },
        {
          content: (
            <ContextualMenu
              hasToggleIcon={true}
              toggleDisabled={!canEdit}
              toggleAppearance="base"
              toggleClassName="u-no-margin--bottom"
              links={[
                {
                  children: "Edit record...",
                  disabled: true, // DELETEME when implemented
                  onClick: () => {
                    // TODO
                  },
                },
                {
                  children: "Remove record...",
                  disabled: true, // DELETEME when implemented
                  onClick: () => {
                    // TODO
                  },
                },
              ]}
            />
          ),
          className: "u-align--right",
        },
      ],
      sortData: {
        name: resource.name,
        type: resource.rrtype,
        ttl: resource.ttl,
        data: resource.rrdata,
      },
    };
  });

  return (
    <Strip>
      <Row>
        <Col size="12">
          <h3 className="p-heading--4">Resource records</h3>
          <MainTable
            className="p-table-expanding--light"
            headers={headers}
            rows={rows}
            sortable
            paginate={50}
            defaultSort="name"
            defaultSortDirection="ascending"
          />
        </Col>
      </Row>
    </Strip>
  );
};

export default ResourceRecords;
