name: CI
on:
  push:
    branches:
      - "3.4"
  pull_request:
    branches:
      - "3.4"
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Restore node_modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: CYPRESS_INSTALL_BINARY=0 yarn install
      - run: yarn lint

  test:
    name: Test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Restore node_modules
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: CYPRESS_INSTALL_BINARY=0 yarn install
      - run: yarn test:ci

  build:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Restore node_modules
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: CYPRESS_INSTALL_BINARY=0 yarn install
      - name: Build assets
        env:
          CI: false
        run: yarn build
      - name: Serve build
        run: yarn serve --host --port=8400 --base=/ &
      - name: Wait for UI to be ready
        run: yarn wait-on-ui
